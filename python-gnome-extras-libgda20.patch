diff -aurN gnome-python-extras-2.12.0.orig/configure.ac gnome-python-extras-2.12.0/configure.ac
--- gnome-python-extras-2.12.0.orig/configure.ac	2005-09-10 19:39:20.000000000 +0200
+++ gnome-python-extras-2.12.0/configure.ac	2005-10-25 13:36:52.000000000 +0200
@@ -25,7 +25,7 @@
 m4_define(firefox_required_version,           1.0)
 m4_define(libgtop_required_version,           2.9.5)
 m4_define(libnautilus_burn_required_version,  2.11.1)
-m4_define(libgda_required_version,            1.2.0)
+m4_define(libgda_required_version,            1.9.100)
 m4_define(gksu_required_version,              1.2.5)
 m4_define(gksuui_required_version,            1.0.3)
 m4_define(mediaprofiles_required_version,     2.10.0)
@@ -287,7 +287,7 @@
 
 dnl should we build the gda module?
 build_gda=false
-PKG_CHECK_MODULES(GDA, [libgda >= libgda_required_version pygtk-2.0 >= pygtk_required_version],
+PKG_CHECK_MODULES(GDA, [libgda-2.0 >= libgda_required_version pygtk-2.0 >= pygtk_required_version],
   build_gda=true,
   build_gda=false)
 AM_CONDITIONAL(BUILD_GDA, $build_gda)
@@ -353,7 +353,7 @@
   gtop/Makefile
   nautilusburn/Makefile
   gda/Makefile
-  gda/pygda-1.2.pc
+  gda/pygda-2.0.pc
   gksu/Makefile
   mediaprofiles/Makefile
   gnome-python-extras-2.0.pc
diff -aurN gnome-python-extras-2.12.0.orig/gda/gda.defs gnome-python-extras-2.12.0/gda/gda.defs
--- gnome-python-extras-2.12.0.orig/gda/gda.defs	2005-04-14 22:34:55.000000000 +0200
+++ gnome-python-extras-2.12.0/gda/gda.defs	2005-10-23 17:13:19.000000000 +0200
@@ -1,5 +1,12 @@
 ;; -*- scheme -*-
 ; object definitions ...
+(define-object Blob
+  (in-module "Gda")
+  (parent "GObject")
+  (c-name "GdaBlob")
+  (gtype-id "GDA_TYPE_BLOB")
+)
+
 (define-object Client
   (in-module "Gda")
   (parent "GObject")
@@ -7,6 +14,20 @@
   (gtype-id "GDA_TYPE_CLIENT")
 )
 
+(define-object Column
+  (in-module "Gda")
+  (parent "GObject")
+  (c-name "GdaColumn")
+  (gtype-id "GDA_TYPE_COLUMN")
+)
+
+(define-object ColumnIndex
+  (in-module "Gda")
+  (parent "GObject")
+  (c-name "GdaColumnIndex")
+  (gtype-id "GDA_TYPE_COLUMN_INDEX")
+)
+
 (define-object Connection
   (in-module "Gda")
   (parent "GObject")
@@ -14,39 +35,52 @@
   (gtype-id "GDA_TYPE_CONNECTION")
 )
 
-(define-object DataModel
+(define-object ConnectionEvent
   (in-module "Gda")
   (parent "GObject")
+  (c-name "GdaConnectionEvent")
+  (gtype-id "GDA_TYPE_CONNECTION_EVENT")
+)
+
+(define-object DataModel
+  (in-module "Gda")
   (c-name "GdaDataModel")
   (gtype-id "GDA_TYPE_DATA_MODEL")
 )
 
+(define-object DataModelBase
+  (in-module "Gda")
+  (parent "GObject")
+  (c-name "GdaDataModelBase")
+  (gtype-id "GDA_TYPE_DATA_MODEL_BASE")
+)
+
 (define-object DataModelArray
   (in-module "Gda")
-  (parent "GdaDataModel")
+  (parent "GdaDataModelBase")
   (c-name "GdaDataModelArray")
   (gtype-id "GDA_TYPE_DATA_MODEL_ARRAY")
 )
 
 (define-object DataModelHash
   (in-module "Gda")
-  (parent "GdaDataModel")
+  (parent "GdaDataModelBase")
   (c-name "GdaDataModelHash")
   (gtype-id "GDA_TYPE_DATA_MODEL_HASH")
 )
 
 (define-object DataModelList
   (in-module "Gda")
-  (parent "GdaDataModel")
+  (parent "GdaDataModelBase")
   (c-name "GdaDataModelList")
   (gtype-id "GDA_TYPE_DATA_MODEL_LIST")
 )
 
-(define-object Error
+(define-object Row
   (in-module "Gda")
   (parent "GObject")
-  (c-name "GdaError")
-  (gtype-id "GDA_TYPE_ERROR")
+  (c-name "GdaRow")
+  (gtype-id "GDA_TYPE_ROW")
 )
 
 (define-object Select
@@ -63,11 +97,11 @@
   (gtype-id "GDA_TYPE_SERVER_PROVIDER")
 )
 
-(define-object Table
+(define-object Threader
   (in-module "Gda")
-  (parent "GdaDataModelArray")
-  (c-name "GdaTable")
-  (gtype-id "GDA_TYPE_TABLE")
+  (parent "GObject")
+  (c-name "GdaThreader")
+  (gtype-id "GDA_TYPE_THREADER")
 )
 
 (define-object Transaction
@@ -77,244 +111,6 @@
   (gtype-id "GDA_TYPE_TRANSACTION")
 )
 
-(define-object XmlConnection
-  (in-module "Gda")
-  (parent "GObject")
-  (c-name "GdaXmlConnection")
-  (gtype-id "GDA_TYPE_XML_CONNECTION")
-)
-
-(define-object XmlDatabase
-  (in-module "Gda")
-  (parent "GObject")
-  (c-name "GdaXmlDatabase")
-  (gtype-id "GDA_TYPE_XML_DATABASE")
-)
-
-(define-object XmlDocument
-  (in-module "Gda")
-  (parent "GObject")
-  (c-name "GdaXmlDocument")
-  (gtype-id "GDA_TYPE_XML_DOCUMENT")
-)
-
-(define-object XqlItem
-  (in-module "Gda")
-  (parent "GObject")
-  (c-name "GdaXqlItem")
-  (gtype-id "GDA_TYPE_XQL_ITEM")
-)
-
-(define-object XqlDual
-  (in-module "Gda")
-  (parent "GdaXqlItem")
-  (c-name "GdaXqlDual")
-  (gtype-id "GDA_TYPE_XQL_DUAL")
-)
-
-(define-object XqlDml
-  (in-module "Gda")
-  (parent "GdaXqlItem")
-  (c-name "GdaXqlDml")
-  (gtype-id "GDA_TYPE_XQL_DML")
-)
-
-(define-object XqlInsert
-  (in-module "Gda")
-  (parent "GdaXqlDml")
-  (c-name "GdaXqlInsert")
-  (gtype-id "GDA_TYPE_XQL_INSERT")
-)
-
-(define-object XqlDelete
-  (in-module "Gda")
-  (parent "GdaXqlDml")
-  (c-name "GdaXqlDelete")
-  (gtype-id "GDA_TYPE_XQL_DELETE")
-)
-
-(define-object XqlBin
-  (in-module "Gda")
-  (parent "GdaXqlItem")
-  (c-name "GdaXqlBin")
-  (gtype-id "GDA_TYPE_XQL_BIN")
-)
-
-(define-object XqlFunc
-  (in-module "Gda")
-  (parent "GdaXqlBin")
-  (c-name "GdaXqlFunc")
-  (gtype-id "GDA_TYPE_XQL_FUNC")
-)
-
-(define-object XqlAtom
-  (in-module "Gda")
-  (parent "GdaXqlItem")
-  (c-name "GdaXqlAtom")
-  (gtype-id "GDA_TYPE_XQL_ATOM")
-)
-
-(define-object XqlField
-  (in-module "Gda")
-  (parent "GdaXqlAtom")
-  (c-name "GdaXqlField")
-  (gtype-id "GDA_TYPE_XQL_FIELD")
-)
-
-(define-object XqlConst
-  (in-module "Gda")
-  (parent "GdaXqlAtom")
-  (c-name "GdaXqlConst")
-  (gtype-id "GDA_TYPE_XQL_CONST")
-)
-
-(define-object XqlColumn
-  (in-module "Gda")
-  (parent "GdaXqlAtom")
-  (c-name "GdaXqlColumn")
-  (gtype-id "GDA_TYPE_XQL_COLUMN")
-)
-
-(define-object XqlJoin
-  (in-module "Gda")
-  (parent "GdaXqlDual")
-  (c-name "GdaXqlJoin")
-  (gtype-id "GDA_TYPE_XQL_JOIN")
-)
-
-(define-object XqlList
-  (in-module "Gda")
-  (parent "GdaXqlItem")
-  (c-name "GdaXqlList")
-  (gtype-id "GDA_TYPE_XQL_LIST")
-)
-
-(define-object XqlQuery
-  (in-module "Gda")
-  (parent "GdaXqlBin")
-  (c-name "GdaXqlQuery")
-  (gtype-id "GDA_TYPE_XQL_QUERY")
-)
-
-(define-object XqlSelect
-  (in-module "Gda")
-  (parent "GdaXqlDml")
-  (c-name "GdaXqlSelect")
-  (gtype-id "GDA_TYPE_XQL_SELECT")
-)
-
-(define-object XqlStack
-  (in-module "Gda")
-  (parent "GObject")
-  (c-name "GdaXqlStack")
-  (gtype-id "GDA_TYPE_XQL_STACK")
-)
-
-(define-object XqlTarget
-  (in-module "Gda")
-  (parent "GdaXqlBin")
-  (c-name "GdaXqlTarget")
-  (gtype-id "GDA_TYPE_XQL_TARGET")
-)
-
-(define-object XqlUpdate
-  (in-module "Gda")
-  (parent "GdaXqlDml")
-  (c-name "GdaXqlUpdate")
-  (gtype-id "GDA_TYPE_XQL_UPDATE")
-)
-
-(define-object XqlValue
-  (in-module "Gda")
-  (parent "GdaXqlBin")
-  (c-name "GdaXqlValue")
-  (gtype-id "GDA_TYPE_XQL_VALUE")
-)
-
-(define-object XqlValueRef
-  (in-module "Gda")
-  (parent "GdaXqlAtom")
-  (c-name "GdaXqlValueRef")
-  (gtype-id "GDA_TYPE_XQL_VALUE_REF")
-)
-
-; boxed types
-
-(define-boxed Command
-  (in-module "Gda")
-  (c-name "GdaCommand")
-  (gtype-id "GDA_TYPE_COMMAND")
-  (copy-func "gda_command_copy")
-  (release-func "gda_command_free")
-)
-
-(define-boxed DataSourceInfo
-  (in-module "Gda")
-  (c-name "GdaDataSourceInfo")
-  (gtype-id "GDA_TYPE_DATA_SOURCE_INFO")
-  (copy-func "gda_config_copy_data_source_info")
-  (release-func "gda_config_free_data_source_info")
-  (fields
-    '("gchar*" "name")
-    '("gchar*" "provider")
-    '("gchar*" "cnc_string")
-    '("gchar*" "description")
-    '("gchar*" "username")
-    '("gchar*" "password")
-  )
-)
-
-(define-boxed FieldAttributes
-  (in-module "Gda")
-  (c-name "GdaFieldAttributes")
-  (gtype-id "GDA_TYPE_FIELD_ATTRIBUTES")
-  (copy-func "gda_field_attributes_copy")
-  (release-func "gda_field_attributes_free")
-)
-
-(define-boxed Parameter
-  (in-module "Gda")
-  (c-name "GdaParameter")
-  (gtype-id "GDA_TYPE_PARAMETER")
-  (copy-func "gda_parameter_copy")
-  (release-func "gda_parameter_free")
-)
-
-(define-boxed ParameterList
-  (in-module "Gda")
-  (c-name "GdaParameterList")
-  (gtype-id "GDA_TYPE_PARAMETER_LIST")
-  (copy-func "gda_parameter_list_copy")
-  (release-func "gda_parameter_list_free")
-)
-
-(define-boxed ProviderInfo
-  (in-module "Gda")
-  (c-name "GdaProviderInfo")
-  (gtype-id "GDA_TYPE_PROVIDER_INFO")
-  (copy-func "gda_provider_info_copy")
-  (release-func "gda_config_free_provider_info")
-  (fields
-    '("gchar*" "id")
-  )
-)
-
-(define-boxed Row
-  (in-module "Gda")
-  (c-name "GdaRow")
-  (gtype-id "GDA_TYPE_ROW")
-  (copy-func "gda_row_copy")
-  (release-func "gda_row_free")
-)
-
-(define-boxed Value
-  (in-module "Gda")
-  (c-name "GdaValue")
-  (gtype-id "GDA_TYPE_VALUE")
-  (copy-func "gda_value_copy")
-  (release-func "gda_value_free")
-)
-
 ;; Enumerations and flags ...
 
 (define-flags BlobMode
@@ -343,6 +139,26 @@
   )
 )
 
+(define-enum ClientSpecsType
+  (in-module "Gda")
+  (c-name "GdaClientSpecsType")
+  (gtype-id "GDA_TYPE_CLIENT_SPECS_TYPE")
+  (values
+    '("create-database" "GDA_CLIENT_SPECS_CREATE_DATABASE")
+    '("drop-database" "GDA_CLIENT_SPECS_DROP_DATABASE")
+  )
+)
+
+(define-enum Sorting
+  (in-module "Gda")
+  (c-name "GdaSorting")
+  (gtype-id "GDA_TYPE_SORTING")
+  (values
+    '("ascending" "GDA_SORTING_ASCENDING")
+    '("descending" "GDA_SORTING_DESCENDING")
+  )
+)
+
 (define-flags CommandOptions
   (in-module "Gda")
   (c-name "GdaCommandOptions")
@@ -368,6 +184,44 @@
   )
 )
 
+(define-enum ConnectionEventType
+  (in-module "Gda")
+  (c-name "GdaConnectionEventType")
+  (gtype-id "GDA_TYPE_CONNECTION_EVENT_TYPE")
+  (values
+    '("notice" "GDA_CONNECTION_EVENT_NOTICE")
+    '("warning" "GDA_CONNECTION_EVENT_WARNING")
+    '("error" "GDA_CONNECTION_EVENT_ERROR")
+  )
+)
+
+(define-enum ConnectionEventCode
+  (in-module "Gda")
+  (c-name "GdaConnectionEventCode")
+  (gtype-id "GDA_TYPE_CONNECTION_EVENT_CODE")
+  (values
+    '("constraint-violation" "GDA_CONNECTION_EVENT_CODE_CONSTRAINT_VIOLATION")
+    '("restrict-violation" "GDA_CONNECTION_EVENT_CODE_RESTRICT_VIOLATION")
+    '("not-null-violation" "GDA_CONNECTION_EVENT_CODE_NOT_NULL_VIOLATION")
+    '("foreign-key-violation" "GDA_CONNECTION_EVENT_CODE_FOREIGN_KEY_VIOLATION")
+    '("unique-violation" "GDA_CONNECTION_EVENT_CODE_UNIQUE_VIOLATION")
+    '("check-violation" "GDA_CONNECTION_EVENT_CODE_CHECK_VIOLATION")
+    '("insufficient-privileges" "GDA_CONNECTION_EVENT_CODE_INSUFFICIENT_PRIVILEGES")
+    '("undefined-column" "GDA_CONNECTION_EVENT_CODE_UNDEFINED_COLUMN")
+    '("undefined-function" "GDA_CONNECTION_EVENT_CODE_UNDEFINED_FUNCTION")
+    '("undefined-table" "GDA_CONNECTION_EVENT_CODE_UNDEFINED_TABLE")
+    '("duplicate-column" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_COLUMN")
+    '("duplicate-database" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_DATABASE")
+    '("duplicate-function" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_FUNCTION")
+    '("duplicate-schema" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_SCHEMA")
+    '("duplicate-table" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_TABLE")
+    '("duplicate-alias" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_ALIAS")
+    '("duplicate-object" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_OBJECT")
+    '("syntax-error" "GDA_CONNECTION_EVENT_CODE_SYNTAX_ERROR")
+    '("unknown" "GDA_CONNECTION_EVENT_CODE_UNKNOWN")
+  )
+)
+
 (define-flags ConnectionOptions
   (in-module "Gda")
   (c-name "GdaConnectionOptions")
@@ -469,7 +323,12 @@
 )
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-blob.h
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-blob.h
+
+(define-function gda_blob_get_type
+  (c-name "gda_blob_get_type")
+  (return-type "GType")
+)
 
 (define-method open
   (of-object "GdaBlob")
@@ -524,15 +383,15 @@
   (return-type "gint")
 )
 
-(define-method free_data
+(define-method get_sql_id
   (of-object "GdaBlob")
-  (c-name "gda_blob_free_data")
-  (return-type "none")
+  (c-name "gda_blob_get_sql_id")
+  (return-type "gchar*")
 )
 
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-client.h
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-client.h
 
 (define-function gda_client_get_type
   (c-name "gda_client_get_type")
@@ -553,7 +412,8 @@
     '("const-gchar*" "dsn")
     '("const-gchar*" "username")
     '("const-gchar*" "password")
-    '("GdaConnectionOptions" "options" (default "0"))
+    '("GdaConnectionOptions" "options")
+    '("GError**" "error")
   )
 )
 
@@ -565,12 +425,13 @@
     '("const-gchar*" "provider_id")
     '("const-gchar*" "cnc_string")
     '("GdaConnectionOptions" "options")
+    '("GError**" "error")
   )
 )
 
-(define-method get_connection_list
+(define-method get_connections
   (of-object "GdaClient")
-  (c-name "gda_client_get_connection_list")
+  (c-name "gda_client_get_connections")
   (return-type "const-GList*")
 )
 
@@ -598,7 +459,7 @@
   (parameters
     '("GdaConnection*" "cnc")
     '("GdaClientEvent" "event")
-    '("GdaParameterList*" "params" (null-ok) (default "NULL"))
+    '("GdaParameterList*" "params")
   )
 )
 
@@ -608,7 +469,7 @@
   (return-type "none")
   (parameters
     '("GdaConnection*" "cnc")
-    '("GdaError*" "error")
+    '("GdaConnectionEvent*" "error")
   )
 )
 
@@ -660,6 +521,47 @@
   )
 )
 
+(define-method get_dsn_specs
+  (of-object "GdaClient")
+  (c-name "gda_client_get_dsn_specs")
+  (return-type "gchar*")
+  (parameters
+    '("const-gchar*" "provider")
+  )
+)
+
+(define-method get_provider_specs
+  (of-object "GdaClient")
+  (c-name "gda_client_get_provider_specs")
+  (return-type "gchar*")
+  (parameters
+    '("const-gchar*" "provider")
+    '("GdaClientSpecsType" "type")
+  )
+)
+
+(define-method create_database
+  (of-object "GdaClient")
+  (c-name "gda_client_create_database")
+  (return-type "gboolean")
+  (parameters
+    '("const-gchar*" "provider")
+    '("GdaParameterList*" "params")
+    '("GError**" "error")
+  )
+)
+
+(define-method drop_database
+  (of-object "GdaClient")
+  (c-name "gda_client_drop_database")
+  (return-type "gboolean")
+  (parameters
+    '("const-gchar*" "provider")
+    '("GdaParameterList*" "params")
+    '("GError**" "error")
+  )
+)
+
 (define-method begin_transaction
   (of-object "GdaClient")
   (c-name "gda_client_begin_transaction")
@@ -689,1425 +591,1587 @@
 
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-command.h
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-column.h
 
-(define-function gda_command_get_type
-  (c-name "gda_command_get_type")
+(define-function gda_column_get_type
+  (c-name "gda_column_get_type")
   (return-type "GType")
 )
 
-(define-function gda_command_new
-  (c-name "gda_command_new")
-  (is-constructor-of "GdaCommand")
-  (return-type "GdaCommand*")
-  (parameters
-    '("const-gchar*" "text")
-    '("GdaCommandType" "type" (default "GDA_COMMAND_TYPE_SQL"))
-    '("GdaCommandOptions" "options" (default "GDA_COMMAND_OPTION_STOP_ON_ERRORS"))
-  )
+(define-function gda_column_new
+  (c-name "gda_column_new")
+  (is-constructor-of "GdaColumn")
+  (return-type "GdaColumn*")
 )
 
-(define-method free
-  (of-object "GdaCommand")
-  (c-name "gda_command_free")
-  (return-type "none")
+(define-method copy
+  (of-object "GdaColumn")
+  (c-name "gda_column_copy")
+  (return-type "GdaColumn*")
 )
 
-(define-method copy
-  (of-object "GdaCommand")
-  (c-name "gda_command_copy")
-  (return-type "GdaCommand*")
+(define-method equal
+  (of-object "GdaColumn")
+  (c-name "gda_column_equal")
+  (return-type "gboolean")
+  (parameters
+    '("const-GdaColumn*" "rhs")
+  )
 )
 
-(define-method get_text
-  (of-object "GdaCommand")
-  (c-name "gda_command_get_text")
+(define-method get_title
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_title")
   (return-type "const-gchar*")
 )
 
-(define-method set_text
-  (of-object "GdaCommand")
-  (c-name "gda_command_set_text")
+(define-method set_title
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_title")
   (return-type "none")
   (parameters
-    '("const-gchar*" "text")
+    '("const-gchar*" "title")
   )
 )
 
-(define-method get_command_type
-  (of-object "GdaCommand")
-  (c-name "gda_command_get_command_type")
-  (return-type "GdaCommandType")
+(define-method get_defined_size
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_defined_size")
+  (return-type "glong")
 )
 
-(define-method set_command_type
-  (of-object "GdaCommand")
-  (c-name "gda_command_set_command_type")
+(define-method set_defined_size
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_defined_size")
   (return-type "none")
   (parameters
-    '("GdaCommandType" "type")
+    '("glong" "size")
   )
 )
 
-(define-method get_options
-  (of-object "GdaCommand")
-  (c-name "gda_command_get_options")
-  (return-type "GdaCommandOptions")
+(define-method get_name
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_name")
+  (return-type "const-gchar*")
 )
 
-(define-method set_options
-  (of-object "GdaCommand")
-  (c-name "gda_command_set_options")
+(define-method set_name
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_name")
   (return-type "none")
   (parameters
-    '("GdaCommandOptions" "options")
+    '("const-gchar*" "name")
   )
 )
 
-(define-method get_transaction
-  (of-object "GdaCommand")
-  (c-name "gda_command_get_transaction")
-  (return-type "GdaTransaction*")
+(define-method get_table
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_table")
+  (return-type "const-gchar*")
 )
 
-(define-method set_transaction
-  (of-object "GdaCommand")
-  (c-name "gda_command_set_transaction")
+(define-method set_table
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_table")
   (return-type "none")
   (parameters
-    '("GdaTransaction*" "xaction")
+    '("const-gchar*" "table")
   )
 )
 
+(define-method get_caption
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_caption")
+  (return-type "const-gchar*")
+)
 
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-config.h
-
-(define-function config_get_string
-  (c-name "gda_config_get_string")
-  (return-type "gchar*")
+(define-method set_caption
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_caption")
+  (return-type "none")
   (parameters
-    '("const-gchar*" "path")
+    '("const-gchar*" "caption")
   )
 )
 
-(define-function config_get_int
-  (c-name "gda_config_get_int")
-  (return-type "gint")
-  (parameters
-    '("const-gchar*" "path")
-  )
+(define-method get_scale
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_scale")
+  (return-type "glong")
 )
 
-(define-function config_get_float
-  (c-name "gda_config_get_float")
-  (return-type "gdouble")
+(define-method set_scale
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_scale")
+  (return-type "none")
   (parameters
-    '("const-gchar*" "path")
+    '("glong" "scale")
   )
 )
 
-(define-function config_get_boolean
-  (c-name "gda_config_get_boolean")
-  (return-type "gboolean")
-  (parameters
-    '("const-gchar*" "path")
-  )
+(define-method get_dbms_type
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_dbms_type")
+  (return-type "const-gchar*")
 )
 
-(define-function config_set_string
-  (c-name "gda_config_set_string")
+(define-method set_dbms_type
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_dbms_type")
   (return-type "none")
   (parameters
-    '("const-gchar*" "path")
-    '("const-gchar*" "new_value")
+    '("const-gchar*" "dbms_type")
   )
 )
 
-(define-function config_set_int
-  (c-name "gda_config_set_int")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "path")
-    '("gint" "new_value")
-  )
+(define-method get_gdatype
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_gdatype")
+  (return-type "GdaValueType")
 )
 
-(define-function config_set_float
-  (c-name "gda_config_set_float")
+(define-method set_gdatype
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_gdatype")
   (return-type "none")
   (parameters
-    '("const-gchar*" "path")
-    '("gdouble" "new_value")
+    '("GdaValueType" "type")
   )
 )
 
-(define-function config_set_boolean
-  (c-name "gda_config_set_boolean")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "path")
-    '("gboolean" "new_value")
-  )
+(define-method get_allow_null
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_allow_null")
+  (return-type "gboolean")
 )
 
-(define-function config_remove_section
-  (c-name "gda_config_remove_section")
+(define-method set_allow_null
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_allow_null")
   (return-type "none")
   (parameters
-    '("const-gchar*" "path")
+    '("gboolean" "allow")
   )
 )
 
-(define-function config_remove_key
-  (c-name "gda_config_remove_key")
+(define-method get_primary_key
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_primary_key")
+  (return-type "gboolean")
+)
+
+(define-method set_primary_key
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_primary_key")
   (return-type "none")
   (parameters
-    '("const-gchar*" "path")
+    '("gboolean" "pk")
   )
 )
 
-(define-function config_has_section
-  (c-name "gda_config_has_section")
+(define-method get_unique_key
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_unique_key")
   (return-type "gboolean")
-  (parameters
-    '("const-gchar*" "path")
-  )
 )
 
-(define-function config_has_key
-  (c-name "gda_config_has_key")
-  (return-type "gboolean")
+(define-method set_unique_key
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_unique_key")
+  (return-type "none")
   (parameters
-    '("const-gchar*" "path")
+    '("gboolean" "uk")
   )
 )
 
-(define-function config_list_sections
-  (c-name "gda_config_list_sections")
-  (return-type "GList*")
-  (parameters
-    '("const-gchar*" "path")
-  )
+(define-method get_references
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_references")
+  (return-type "const-gchar*")
 )
 
-(define-function config_list_keys
-  (c-name "gda_config_list_keys")
-  (return-type "GList*")
+(define-method set_references
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_references")
+  (return-type "none")
   (parameters
-    '("const-gchar*" "path")
+    '("const-gchar*" "ref")
   )
 )
 
-(define-function config_get_type
-  (c-name "gda_config_get_type")
-  (return-type "gchar*")
-  (parameters
-    '("const-gchar*" "path")
-  )
+(define-method get_auto_increment
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_auto_increment")
+  (return-type "gboolean")
 )
 
-(define-function config_free_list
-  (c-name "gda_config_free_list")
+(define-method set_auto_increment
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_auto_increment")
   (return-type "none")
   (parameters
-    '("GList*" "list")
+    '("gboolean" "is_auto")
   )
 )
 
-(define-function config_add_listener
-  (c-name "gda_config_add_listener")
-  (return-type "guint")
-  (parameters
-    '("const-gchar*" "path")
-    '("GdaConfigListenerFunc" "func")
-    '("gpointer" "user_data")
-  )
+(define-method get_position
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_position")
+  (return-type "gint")
 )
 
-(define-function config_remove_listener
-  (c-name "gda_config_remove_listener")
+(define-method set_position
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_position")
   (return-type "none")
   (parameters
-    '("guint" "id")
+    '("gint" "position")
   )
 )
 
-(define-function gda_provider_parameter_info_get_type
-  (c-name "gda_provider_parameter_info_get_type")
-  (return-type "GType")
+(define-method get_default_value
+  (of-object "GdaColumn")
+  (c-name "gda_column_get_default_value")
+  (return-type "const-GdaValue*")
 )
 
-(define-function gda_provider_parameter_info_new_full
-  (c-name "gda_provider_parameter_info_new_full")
-  (return-type "GdaProviderParameterInfo*")
+(define-method set_default_value
+  (of-object "GdaColumn")
+  (c-name "gda_column_set_default_value")
+  (return-type "none")
   (parameters
-    '("const-gchar*" "name")
-    '("const-gchar*" "short_description")
-    '("const-gchar*" "long_description")
-    '("GdaValueType" "type")
+    '("const-GdaValue*" "default_value")
   )
 )
 
-(define-method copy
-  (of-object "GdaProviderParameterInfo")
-  (c-name "gda_provider_parameter_info_copy")
-  (return-type "GdaProviderParameterInfo*")
-)
 
-(define-method free
-  (of-object "GdaProviderParameterInfo")
-  (c-name "gda_provider_parameter_info_free")
-  (return-type "none")
-)
 
-(define-function gda_provider_info_get_type
-  (c-name "gda_provider_info_get_type")
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-column-index.h
+
+(define-function gda_column_index_get_type
+  (c-name "gda_column_index_get_type")
   (return-type "GType")
 )
 
+(define-function gda_column_index_new
+  (c-name "gda_column_index_new")
+  (is-constructor-of "GdaColumnIndex")
+  (return-type "GdaColumnIndex*")
+)
+
 (define-method copy
-  (of-object "GdaProviderInfo")
-  (c-name "gda_provider_info_copy")
-  (return-type "GdaProviderInfo*")
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_copy")
+  (return-type "GdaColumnIndex*")
 )
 
-(define-method free
-  (of-object "GdaProviderInfo")
-  (c-name "gda_provider_info_free")
-  (return-type "none")
+(define-method equal
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_equal")
+  (return-type "gboolean")
+  (parameters
+    '("const-GdaColumnIndex*" "rhs")
+  )
 )
 
-(define-function config_get_provider_list
-  (c-name "gda_config_get_provider_list")
-  (return-type "GList*")
+(define-method get_column_name
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_get_column_name")
+  (return-type "const-gchar*")
 )
 
-(define-function config_free_provider_list
-  (c-name "gda_config_free_provider_list")
+(define-method set_column_name
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_set_column_name")
   (return-type "none")
   (parameters
-    '("GList*" "list")
+    '("const-gchar*" "column_name")
   )
 )
 
-(define-function config_get_data_source_list
-  (c-name "gda_config_get_data_source_list")
-  (return-type "GList*")
+(define-method get_defined_size
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_get_defined_size")
+  (return-type "glong")
 )
 
-(define-function config_get_provider_by_name
-  (c-name "gda_config_get_provider_by_name")
-  (return-type "GdaProviderInfo*")
+(define-method set_defined_size
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_set_defined_size")
+  (return-type "none")
   (parameters
-    '("const-gchar*" "name")
+    '("glong" "size")
   )
 )
 
-(define-function config_get_provider_model
-  (c-name "gda_config_get_provider_model")
-  (return-type "GdaDataModel*")
+(define-method get_sorting
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_get_sorting")
+  (return-type "GdaSorting")
 )
 
-(define-function gda_data_source_info_get_type
-  (c-name "gda_data_source_info_get_type")
-  (return-type "GType")
+(define-method set_sorting
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_set_sorting")
+  (return-type "none")
+  (parameters
+    '("GdaSorting" "sorting")
+  )
 )
 
-(define-function gda_data_source_info_new
-  (c-name "gda_data_source_info_new")
-  (is-constructor-of "GdaDataSourceInfo")
-  (return-type "GdaDataSourceInfo")
+(define-method get_references
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_get_references")
+  (return-type "const-gchar*")
 )
 
-(define-function config_copy_data_source_info
-  (c-name "gda_config_copy_data_source_info")
-  (return-type "GdaDataSourceInfo*")
+(define-method set_references
+  (of-object "GdaColumnIndex")
+  (c-name "gda_column_index_set_references")
+  (return-type "none")
   (parameters
-    '("GdaDataSourceInfo*" "src")
+    '("const-gchar*" "ref")
   )
 )
 
-(define-function config_find_data_source
-  (c-name "gda_config_find_data_source")
-  (return-type "GdaDataSourceInfo*")
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-command.h
+
+(define-function gda_command_get_type
+  (c-name "gda_command_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_command_new
+  (c-name "gda_command_new")
+  (is-constructor-of "GdaCommand")
+  (return-type "GdaCommand*")
   (parameters
-    '("const-gchar*" "name")
+    '("const-gchar*" "text")
+    '("GdaCommandType" "type")
+    '("GdaCommandOptions" "options")
   )
 )
 
-(define-function config_free_data_source_list
-  (c-name "gda_config_free_data_source_list")
+(define-method free
+  (of-object "GdaCommand")
+  (c-name "gda_command_free")
   (return-type "none")
-  (parameters
-    '("GList*" "list")
-  )
 )
 
-(define-function config_get_data_source_model
-  (c-name "gda_config_get_data_source_model")
-  (return-type "GdaDataModel*")
+(define-method copy
+  (of-object "GdaCommand")
+  (c-name "gda_command_copy")
+  (return-type "GdaCommand*")
 )
 
-(define-function config_save_data_source
-  (c-name "gda_config_save_data_source")
+(define-method get_text
+  (of-object "GdaCommand")
+  (c-name "gda_command_get_text")
+  (return-type "const-gchar*")
+)
+
+(define-method set_text
+  (of-object "GdaCommand")
+  (c-name "gda_command_set_text")
   (return-type "none")
   (parameters
-    '("const-gchar*" "name")
-    '("const-gchar*" "provider")
-    '("const-gchar*" "cnc_string")
-    '("const-gchar*" "description")
-    '("const-gchar*" "username")
-    '("const-gchar*" "password")
+    '("const-gchar*" "text")
   )
 )
 
-(define-function config_save_data_source_info
-  (c-name "gda_config_save_data_source_info")
+(define-method get_command_type
+  (of-object "GdaCommand")
+  (c-name "gda_command_get_command_type")
+  (return-type "GdaCommandType")
+)
+
+(define-method set_command_type
+  (of-object "GdaCommand")
+  (c-name "gda_command_set_command_type")
   (return-type "none")
   (parameters
-    '("GdaDataSourceInfo*" "dsn_info")
+    '("GdaCommandType" "type")
   )
 )
 
-(define-function config_remove_data_source
-  (c-name "gda_config_remove_data_source")
+(define-method get_options
+  (of-object "GdaCommand")
+  (c-name "gda_command_get_options")
+  (return-type "GdaCommandOptions")
+)
+
+(define-method set_options
+  (of-object "GdaCommand")
+  (c-name "gda_command_set_options")
   (return-type "none")
   (parameters
-    '("const-gchar*" "name")
+    '("GdaCommandOptions" "options")
   )
 )
 
+(define-method get_transaction
+  (of-object "GdaCommand")
+  (c-name "gda_command_get_transaction")
+  (return-type "GdaTransaction*")
+)
 
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-connection.h
-
-(define-function gda_connection_get_type
-  (c-name "gda_connection_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_connection_new
-  (c-name "gda_connection_new")
-  (is-constructor-of "GdaConnection")
-  (return-type "GdaConnection*")
+(define-method set_transaction
+  (of-object "GdaCommand")
+  (c-name "gda_command_set_transaction")
+  (return-type "none")
   (parameters
-    '("GdaClient*" "client")
-    '("GdaServerProvider*" "provider")
-    '("const-gchar*" "dsn")
-    '("const-gchar*" "username")
-    '("const-gchar*" "password")
-    '("GdaConnectionOptions" "options")
+    '("GdaTransaction*" "xaction")
   )
 )
 
-(define-method reset
-  (of-object "GdaConnection")
-  (c-name "gda_connection_reset")
-  (return-type "gboolean")
-)
-
-(define-method close
-  (of-object "GdaConnection")
-  (c-name "gda_connection_close")
-  (return-type "gboolean")
-)
 
-(define-method is_open
-  (of-object "GdaConnection")
-  (c-name "gda_connection_is_open")
-  (return-type "gboolean")
-)
 
-(define-method get_client
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_client")
-  (return-type "GdaClient*")
-)
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-config.h
 
-(define-method set_client
-  (of-object "GdaConnection")
-  (c-name "gda_connection_set_client")
-  (return-type "none")
+(define-function gda_config_get_string
+  (c-name "gda_config_get_string")
+  (return-type "gchar*")
   (parameters
-    '("GdaClient*" "client")
+    '("const-gchar*" "path")
   )
 )
 
-(define-method get_options
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_options")
-  (return-type "GdaConnectionOptions")
-)
-
-(define-method get_server_version
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_server_version")
-  (return-type "const-gchar*")
-)
-
-(define-method get_database
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_database")
-  (return-type "const-gchar*")
-)
-
-(define-method get_dsn
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_dsn")
-  (return-type "const-gchar*")
-)
-
-(define-method get_cnc_string
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_cnc_string")
-  (return-type "const-gchar*")
-)
-
-(define-method get_provider
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_provider")
-  (return-type "const-gchar*")
-)
-
-(define-method get_username
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_username")
-  (return-type "const-gchar*")
-)
-
-(define-method get_password
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_password")
-  (return-type "const-gchar*")
-)
-
-(define-method add_error
-  (of-object "GdaConnection")
-  (c-name "gda_connection_add_error")
-  (return-type "none")
+(define-function gda_config_get_int
+  (c-name "gda_config_get_int")
+  (return-type "gint")
   (parameters
-    '("GdaError*" "error")
+    '("const-gchar*" "path")
   )
 )
 
-(define-method add_error_string
-  (of-object "GdaConnection")
-  (c-name "gda_connection_add_error_string")
-  (return-type "none")
+(define-function gda_config_get_float
+  (c-name "gda_config_get_float")
+  (return-type "gdouble")
   (parameters
-    '("const-gchar*" "str")
+    '("const-gchar*" "path")
   )
-  (varargs #t)
 )
 
-(define-method add_error_list
-  (of-object "GdaConnection")
-  (c-name "gda_connection_add_error_list")
-  (return-type "none")
+(define-function gda_config_get_boolean
+  (c-name "gda_config_get_boolean")
+  (return-type "gboolean")
   (parameters
-    '("GList*" "error_list")
+    '("const-gchar*" "path")
   )
 )
 
-(define-method clear_error_list
-  (of-object "GdaConnection")
-  (c-name "gda_connection_clear_error_list")
-  (return-type "none")
-)
-
-(define-method change_database
-  (of-object "GdaConnection")
-  (c-name "gda_connection_change_database")
+(define-function gda_config_set_string
+  (c-name "gda_config_set_string")
   (return-type "gboolean")
   (parameters
-    '("const-gchar*" "name")
+    '("const-gchar*" "path")
+    '("const-gchar*" "new_value")
   )
 )
 
-(define-method create_database
-  (of-object "GdaConnection")
-  (c-name "gda_connection_create_database")
+(define-function gda_config_set_int
+  (c-name "gda_config_set_int")
   (return-type "gboolean")
   (parameters
-    '("const-gchar*" "name")
+    '("const-gchar*" "path")
+    '("gint" "new_value")
   )
 )
 
-(define-method drop_database
-  (of-object "GdaConnection")
-  (c-name "gda_connection_drop_database")
+(define-function gda_config_set_float
+  (c-name "gda_config_set_float")
   (return-type "gboolean")
   (parameters
-    '("const-gchar*" "name")
+    '("const-gchar*" "path")
+    '("gdouble" "new_value")
   )
 )
 
-(define-method create_table
-  (of-object "GdaConnection")
-  (c-name "gda_connection_create_table")
+(define-function gda_config_set_boolean
+  (c-name "gda_config_set_boolean")
   (return-type "gboolean")
   (parameters
-    '("const-gchar*" "table_name")
-    '("const-GdaFieldAttributes*[]" "attributes")
+    '("const-gchar*" "path")
+    '("gboolean" "new_value")
   )
 )
 
-(define-method drop_table
-  (of-object "GdaConnection")
-  (c-name "gda_connection_drop_table")
-  (return-type "gboolean")
+(define-function gda_config_remove_section
+  (c-name "gda_config_remove_section")
+  (return-type "none")
   (parameters
-    '("const-gchar*" "table_name")
+    '("const-gchar*" "path")
   )
 )
 
-(define-method execute_command
-  (of-object "GdaConnection")
-  (c-name "gda_connection_execute_command")
-  (return-type "GList*")
+(define-function gda_config_remove_key
+  (c-name "gda_config_remove_key")
+  (return-type "none")
   (parameters
-    '("GdaCommand*" "cmd")
-    '("GdaParameterList*" "params" (null-ok) (default "NULL"))
+    '("const-gchar*" "path")
   )
 )
 
-(define-method get_last_insert_id
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_last_insert_id")
-  (return-type "gchar*")
+(define-function gda_config_has_section
+  (c-name "gda_config_has_section")
+  (return-type "gboolean")
   (parameters
-    '("GdaDataModel*" "recset")
+    '("const-gchar*" "path")
   )
 )
 
-(define-method execute_single_command
-  (of-object "GdaConnection")
-  (c-name "gda_connection_execute_single_command")
-  (return-type "GdaDataModel*")
+(define-function gda_config_has_key
+  (c-name "gda_config_has_key")
+  (return-type "gboolean")
   (parameters
-    '("GdaCommand*" "cmd")
-    '("GdaParameterList*" "params" (null-ok) (default "NULL"))
+    '("const-gchar*" "path")
   )
 )
 
-(define-method execute_non_query
-  (of-object "GdaConnection")
-  (c-name "gda_connection_execute_non_query")
-  (return-type "gint")
+(define-function gda_config_list_sections
+  (c-name "gda_config_list_sections")
+  (return-type "GList*")
   (parameters
-    '("GdaCommand*" "cmd")
-    '("GdaParameterList*" "params" (null-ok) (default "NULL"))
+    '("const-gchar*" "path")
   )
 )
 
-(define-method begin_transaction
-  (of-object "GdaConnection")
-  (c-name "gda_connection_begin_transaction")
-  (return-type "gboolean")
+(define-function gda_config_list_keys
+  (c-name "gda_config_list_keys")
+  (return-type "GList*")
   (parameters
-    '("GdaTransaction*" "xaction")
+    '("const-gchar*" "path")
   )
 )
 
-(define-method commit_transaction
-  (of-object "GdaConnection")
-  (c-name "gda_connection_commit_transaction")
-  (return-type "gboolean")
+(define-function gda_config_get_type
+  (c-name "gda_config_get_type")
+  (return-type "gchar*")
   (parameters
-    '("GdaTransaction*" "xaction")
+    '("const-gchar*" "path")
   )
 )
 
-(define-method rollback_transaction
-  (of-object "GdaConnection")
-  (c-name "gda_connection_rollback_transaction")
-  (return-type "gboolean")
+(define-function gda_config_free_list
+  (c-name "gda_config_free_list")
+  (return-type "none")
   (parameters
-    '("GdaTransaction*" "xaction")
+    '("GList*" "list")
   )
 )
 
-(define-method create_blob
-  (of-object "GdaConnection")
-  (c-name "gda_connection_create_blob")
-  (return-type "gboolean")
+(define-function gda_config_add_listener
+  (c-name "gda_config_add_listener")
+  (return-type "guint")
   (parameters
-    '("GdaBlob*" "blob")
+    '("const-gchar*" "path")
+    '("GdaConfigListenerFunc" "func")
+    '("gpointer" "user_data")
   )
 )
 
-(define-method escape_string
-  (of-object "GdaConnection")
-  (c-name "gda_connection_escape_string")
-  (return-type "gboolean")
+(define-function gda_config_remove_listener
+  (c-name "gda_config_remove_listener")
+  (return-type "none")
   (parameters
-    '("const-gchar*" "from")
-    '("gchar*" "to")
+    '("guint" "id")
   )
 )
 
-(define-method get_errors
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_errors")
-  (return-type "const-GList*")
+(define-function gda_provider_parameter_info_get_type
+  (c-name "gda_provider_parameter_info_get_type")
+  (return-type "GType")
 )
 
-(define-method supports
-  (of-object "GdaConnection")
-  (c-name "gda_connection_supports")
-  (return-type "gboolean")
+(define-function gda_provider_parameter_info_new_full
+  (c-name "gda_provider_parameter_info_new_full")
+  (return-type "GdaProviderParameterInfo*")
   (parameters
-    '("GdaConnectionFeature" "feature")
+    '("const-gchar*" "name")
+    '("const-gchar*" "short_description")
+    '("const-gchar*" "long_description")
+    '("GdaValueType" "type")
   )
 )
 
-(define-method get_schema
-  (of-object "GdaConnection")
-  (c-name "gda_connection_get_schema")
-  (return-type "GdaDataModel*")
-  (parameters
-    '("GdaConnectionSchema" "schema")
-    '("GdaParameterList*" "params" (null-ok) (default "NULL"))
-  )
+(define-method copy
+  (of-object "GdaProviderParameterInfo")
+  (c-name "gda_provider_parameter_info_copy")
+  (return-type "GdaProviderParameterInfo*")
 )
 
+(define-method free
+  (of-object "GdaProviderParameterInfo")
+  (c-name "gda_provider_parameter_info_free")
+  (return-type "none")
+)
 
+(define-function gda_provider_info_get_type
+  (c-name "gda_provider_info_get_type")
+  (return-type "GType")
+)
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-data-model-array.h
+(define-method copy
+  (of-object "GdaProviderInfo")
+  (c-name "gda_provider_info_copy")
+  (return-type "GdaProviderInfo*")
+)
 
-(define-function gda_data_model_array_get_type
-  (c-name "gda_data_model_array_get_type")
-  (return-type "GType")
+(define-method free
+  (of-object "GdaProviderInfo")
+  (c-name "gda_provider_info_free")
+  (return-type "none")
 )
 
-(define-function gda_data_model_array_new
-  (c-name "gda_data_model_array_new")
-  (is-constructor-of "GdaDataModelArray")
-  (return-type "GdaDataModel*")
-  (parameters
-    '("gint" "cols")
-  )
+(define-function gda_config_get_provider_list
+  (c-name "gda_config_get_provider_list")
+  (return-type "GList*")
 )
 
-(define-method set_n_columns
-  (of-object "GdaDataModelArray")
-  (c-name "gda_data_model_array_set_n_columns")
+(define-function gda_config_free_provider_list
+  (c-name "gda_config_free_provider_list")
   (return-type "none")
   (parameters
-    '("gint" "cols")
+    '("GList*" "list")
   )
 )
 
-(define-method clear
-  (of-object "GdaDataModelArray")
-  (c-name "gda_data_model_array_clear")
-  (return-type "none")
+(define-function gda_config_get_provider_by_name
+  (c-name "gda_config_get_provider_by_name")
+  (return-type "GdaProviderInfo*")
+  (parameters
+    '("const-gchar*" "name")
+  )
 )
 
+(define-function gda_config_get_provider_model
+  (c-name "gda_config_get_provider_model")
+  (return-type "GdaDataModel*")
+)
 
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-data-model.h
-
-(define-function gda_data_model_get_type
-  (c-name "gda_data_model_get_type")
+(define-function gda_data_source_info_get_type
+  (c-name "gda_data_source_info_get_type")
   (return-type "GType")
 )
 
-(define-method changed
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_changed")
-  (return-type "none")
+(define-method copy
+  (of-object "GdaDataSourceInfo")
+  (c-name "gda_data_source_info_copy")
+  (return-type "GdaDataSourceInfo*")
 )
 
-(define-method row_inserted
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_row_inserted")
-  (return-type "none")
+(define-method equal
+  (of-object "GdaDataSourceInfo")
+  (c-name "gda_data_source_info_equal")
+  (return-type "gboolean")
   (parameters
-    '("gint" "row")
+    '("GdaDataSourceInfo*" "info2")
   )
 )
 
-(define-method row_updated
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_row_updated")
-  (return-type "none")
+(define-function gda_config_find_data_source
+  (c-name "gda_config_find_data_source")
+  (return-type "GdaDataSourceInfo*")
   (parameters
-    '("gint" "row")
+    '("const-gchar*" "name")
   )
 )
 
-(define-method row_removed
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_row_removed")
+(define-method free
+  (of-object "GdaDataSourceInfo")
+  (c-name "gda_data_source_info_free")
   (return-type "none")
-  (parameters
-    '("gint" "row")
-  )
 )
 
-(define-method column_inserted
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_column_inserted")
+(define-function gda_config_get_data_source_list
+  (c-name "gda_config_get_data_source_list")
+  (return-type "GList*")
+)
+
+(define-function gda_config_free_data_source_list
+  (c-name "gda_config_free_data_source_list")
   (return-type "none")
   (parameters
-    '("gint" "col")
+    '("GList*" "list")
   )
 )
 
-(define-method column_updated
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_column_updated")
-  (return-type "none")
+(define-function gda_config_get_data_source_model
+  (c-name "gda_config_get_data_source_model")
+  (return-type "GdaDataModel*")
+)
+
+(define-function gda_config_can_modify_global_config
+  (c-name "gda_config_can_modify_global_config")
+  (return-type "gboolean")
+)
+
+(define-function gda_config_save_data_source
+  (c-name "gda_config_save_data_source")
+  (return-type "gboolean")
   (parameters
-    '("gint" "col")
+    '("const-gchar*" "name")
+    '("const-gchar*" "provider")
+    '("const-gchar*" "cnc_string")
+    '("const-gchar*" "description")
+    '("const-gchar*" "username")
+    '("const-gchar*" "password")
+    '("gboolean" "is_global")
   )
 )
 
-(define-method column_removed
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_column_removed")
-  (return-type "none")
+(define-function gda_config_save_data_source_info
+  (c-name "gda_config_save_data_source_info")
+  (return-type "gboolean")
   (parameters
-    '("gint" "col")
+    '("GdaDataSourceInfo*" "dsn_info")
   )
 )
 
-(define-method freeze
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_freeze")
+(define-function gda_config_remove_data_source
+  (c-name "gda_config_remove_data_source")
   (return-type "none")
+  (parameters
+    '("const-gchar*" "name")
+  )
 )
 
-(define-method thaw
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_thaw")
-  (return-type "none")
-)
 
-(define-method get_n_rows
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_get_n_rows")
-  (return-type "gint")
-)
 
-(define-method get_n_columns
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_get_n_columns")
-  (return-type "gint")
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-connection-event.h
+
+(define-function gda_connection_event_get_type
+  (c-name "gda_connection_event_get_type")
+  (return-type "GType")
 )
 
-(define-method describe_column
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_describe_column")
-  (return-type "GdaFieldAttributes*")
+(define-function gda_connection_event_new
+  (c-name "gda_connection_event_new")
+  (is-constructor-of "GdaConnectionEvent")
+  (return-type "GdaConnectionEvent*")
   (parameters
-    '("gint" "col")
+    '("GdaConnectionEventType" "type")
   )
 )
 
-(define-method get_column_title
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_get_column_title")
-  (return-type "const-gchar*")
+(define-method free
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_free")
+  (return-type "none")
+)
+
+(define-function gda_connection_event_list_copy
+  (c-name "gda_connection_event_list_copy")
+  (return-type "GList*")
   (parameters
-    '("gint" "col")
+    '("const-GList*" "events")
   )
 )
 
-(define-method set_column_title
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_set_column_title")
+(define-function gda_connection_event_list_free
+  (c-name "gda_connection_event_list_free")
   (return-type "none")
   (parameters
-    '("gint" "col")
-    '("const-gchar*" "title")
+    '("GList*" "events")
   )
 )
 
-(define-method get_column_position
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_get_column_position")
-  (return-type "gint")
+(define-method set_event_type
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_set_event_type")
+  (return-type "none")
   (parameters
-    '("const-gchar*" "title")
+    '("GdaConnectionEventType" "type")
   )
 )
 
-(define-method get_row
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_get_row")
-  (return-type "const-GdaRow*")
-  (parameters
-    '("gint" "row")
-  )
+(define-method get_event_type
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_get_event_type")
+  (return-type "GdaConnectionEventType")
 )
 
-(define-method get_value_at
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_get_value_at")
-  (return-type "const-GdaValue*")
+(define-method get_description
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_get_description")
+  (return-type "const-gchar*")
+)
+
+(define-method set_description
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_set_description")
+  (return-type "none")
   (parameters
-    '("gint" "col")
-    '("gint" "row")
+    '("const-gchar*" "description")
   )
 )
 
-(define-method is_updatable
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_is_updatable")
-  (return-type "gboolean")
+(define-method get_code
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_get_code")
+  (return-type "glong")
 )
 
-(define-method append_row
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_append_row")
-  (return-type "const-GdaRow*")
+(define-method set_code
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_set_code")
+  (return-type "none")
   (parameters
-    '("const-GList*" "values")
+    '("glong" "code")
   )
 )
 
-(define-method remove_row
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_remove_row")
-  (return-type "gboolean")
-  (parameters
-    '("const-GdaRow*" "row")
-  )
+(define-method get_gda_code
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_get_gda_code")
+  (return-type "GdaConnectionEventCode")
 )
 
-(define-method update_row
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_update_row")
-  (return-type "gboolean")
+(define-method set_gda_code
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_set_gda_code")
+  (return-type "none")
   (parameters
-    '("const-GdaRow*" "row")
+    '("GdaConnectionEventCode" "code")
   )
 )
 
-(define-method append_column
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_append_column")
-  (return-type "gboolean")
-  (parameters
-    '("const-GdaFieldAttributes*" "attrs")
-  )
+(define-method get_source
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_get_source")
+  (return-type "const-gchar*")
 )
 
-(define-method update_column
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_update_column")
-  (return-type "gboolean")
+(define-method set_source
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_set_source")
+  (return-type "none")
   (parameters
-    '("gint" "col")
-    '("const-GdaFieldAttributes*" "attrs")
+    '("const-gchar*" "source")
   )
 )
 
-(define-method remove_column
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_remove_column")
-  (return-type "gboolean")
-  (parameters
-    '("gint" "col")
-  )
+(define-method get_sqlstate
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_get_sqlstate")
+  (return-type "const-gchar*")
 )
 
-(define-method foreach
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_foreach")
+(define-method set_sqlstate
+  (of-object "GdaConnectionEvent")
+  (c-name "gda_connection_event_set_sqlstate")
   (return-type "none")
   (parameters
-    '("GdaDataModelForeachFunc" "func")
-    '("gpointer" "user_data")
+    '("const-gchar*" "sqlstate")
   )
 )
 
-(define-method has_changed
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_has_changed")
-  (return-type "gboolean")
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-connection.h
+
+(define-function gda_connection_get_type
+  (c-name "gda_connection_get_type")
+  (return-type "GType")
 )
 
-(define-method begin_update
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_begin_update")
-  (return-type "gboolean")
+(define-function gda_connection_new
+  (c-name "gda_connection_new")
+  (is-constructor-of "GdaConnection")
+  (return-type "GdaConnection*")
+  (parameters
+    '("GdaClient*" "client")
+    '("GdaServerProvider*" "provider")
+    '("const-gchar*" "dsn")
+    '("const-gchar*" "username")
+    '("const-gchar*" "password")
+    '("GdaConnectionOptions" "options")
+    '("GError**" "error")
+  )
 )
 
-(define-method cancel_update
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_cancel_update")
+(define-method reset
+  (of-object "GdaConnection")
+  (c-name "gda_connection_reset")
   (return-type "gboolean")
 )
 
-(define-method end_update
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_end_update")
+(define-method close
+  (of-object "GdaConnection")
+  (c-name "gda_connection_close")
   (return-type "gboolean")
 )
 
-(define-method to_comma_separated
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_to_comma_separated")
-  (return-type "gchar*")
-)
+(define-method is_open
+  (of-object "GdaConnection")
+  (c-name "gda_connection_is_open")
+  (return-type "gboolean")
+)
 
-(define-method to_tab_separated
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_to_tab_separated")
-  (return-type "gchar*")
+(define-method get_client
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_client")
+  (return-type "GdaClient*")
 )
 
-(define-method to_xml
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_to_xml")
-  (return-type "gchar*")
+(define-method set_client
+  (of-object "GdaConnection")
+  (c-name "gda_connection_set_client")
+  (return-type "none")
   (parameters
-    '("gboolean" "standalone")
+    '("GdaClient*" "client")
   )
 )
 
-(define-method to_xml_node
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_to_xml_node")
-  (return-type "xmlNodePtr")
-  (parameters
-    '("const-gchar*" "name")
-  )
+(define-method get_options
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_options")
+  (return-type "GdaConnectionOptions")
 )
 
-(define-method add_data_from_xml_node
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_add_data_from_xml_node")
-  (return-type "gboolean")
-  (parameters
-    '("xmlNodePtr" "node")
-  )
+(define-method get_server_version
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_server_version")
+  (return-type "const-gchar*")
 )
 
-(define-method get_command_text
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_get_command_text")
+(define-method get_database
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_database")
   (return-type "const-gchar*")
 )
 
-(define-method set_command_text
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_set_command_text")
+(define-method get_dsn
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_dsn")
+  (return-type "const-gchar*")
+)
+
+(define-method get_cnc_string
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_cnc_string")
+  (return-type "const-gchar*")
+)
+
+(define-method get_provider
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_provider")
+  (return-type "const-gchar*")
+)
+
+(define-method get_username
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_username")
+  (return-type "const-gchar*")
+)
+
+(define-method get_password
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_password")
+  (return-type "const-gchar*")
+)
+
+(define-method add_event
+  (of-object "GdaConnection")
+  (c-name "gda_connection_add_event")
   (return-type "none")
   (parameters
-    '("const-gchar*" "txt")
+    '("GdaConnectionEvent*" "error")
   )
 )
 
-(define-method get_command_type
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_get_command_type")
-  (return-type "GdaCommandType")
+(define-method add_event_string
+  (of-object "GdaConnection")
+  (c-name "gda_connection_add_event_string")
+  (return-type "none")
+  (parameters
+    '("const-gchar*" "str")
+  )
+  (varargs #t)
 )
 
-(define-method set_command_type
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_set_command_type")
+(define-method add_events_list
+  (of-object "GdaConnection")
+  (c-name "gda_connection_add_events_list")
   (return-type "none")
   (parameters
-    '("GdaCommandType" "type")
+    '("GList*" "events_list")
   )
 )
 
+(define-method clear_events_list
+  (of-object "GdaConnection")
+  (c-name "gda_connection_clear_events_list")
+  (return-type "none")
+)
 
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-data-model-hash.h
-
-(define-function gda_data_model_hash_get_type
-  (c-name "gda_data_model_hash_get_type")
-  (return-type "GType")
+(define-method get_events
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_events")
+  (return-type "const-GList*")
 )
 
-(define-function gda_data_model_hash_new
-  (c-name "gda_data_model_hash_new")
-  (is-constructor-of "GdaDataModelHash")
-  (return-type "GdaDataModel*")
+(define-method change_database
+  (of-object "GdaConnection")
+  (c-name "gda_connection_change_database")
+  (return-type "gboolean")
   (parameters
-    '("gint" "cols")
+    '("const-gchar*" "name")
   )
 )
 
-(define-method hash_get_value_at
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_hash_get_value_at")
-  (return-type "const-GdaValue*")
+(define-method create_table
+  (of-object "GdaConnection")
+  (c-name "gda_connection_create_table")
+  (return-type "gboolean")
   (parameters
-    '("gint" "col")
-    '("gint" "row")
+    '("const-gchar*" "table_name")
+    '("const-GList*" "attributes_list")
+    '("const-GList*" "index_list")
   )
 )
 
-(define-method clear
-  (of-object "GdaDataModelHash")
-  (c-name "gda_data_model_hash_clear")
-  (return-type "none")
+(define-method drop_table
+  (of-object "GdaConnection")
+  (c-name "gda_connection_drop_table")
+  (return-type "gboolean")
+  (parameters
+    '("const-gchar*" "table_name")
+  )
 )
 
-(define-method set_n_columns
-  (of-object "GdaDataModelHash")
-  (c-name "gda_data_model_hash_set_n_columns")
-  (return-type "none")
+(define-method create_index
+  (of-object "GdaConnection")
+  (c-name "gda_connection_create_index")
+  (return-type "gboolean")
   (parameters
-    '("gint" "cols")
+    '("const-GdaDataModelIndex*" "index")
+    '("const-gchar*" "table_name")
   )
 )
 
-(define-method insert_row
-  (of-object "GdaDataModelHash")
-  (c-name "gda_data_model_hash_insert_row")
-  (return-type "none")
+(define-method drop_index
+  (of-object "GdaConnection")
+  (c-name "gda_connection_drop_index")
+  (return-type "gboolean")
   (parameters
-    '("gint" "rownum")
-    '("GdaRow*" "row")
+    '("const-gchar*" "index_name")
+    '("gboolean" "primary_key")
+    '("const-gchar*" "table_name")
   )
 )
 
-(define-method hash_get_row
-  (of-object "GdaDataModel")
-  (c-name "gda_data_model_hash_get_row")
-  (return-type "const-GdaRow*")
+(define-method execute_command
+  (of-object "GdaConnection")
+  (c-name "gda_connection_execute_command")
+  (return-type "GList*")
   (parameters
-    '("gint" "row")
+    '("GdaCommand*" "cmd")
+    '("GdaParameterList*" "params")
+    '("GError**" "error")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-data-model-list.h
-
-(define-function gda_data_model_list_get_type
-  (c-name "gda_data_model_list_get_type")
-  (return-type "GType")
+(define-method get_last_insert_id
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_last_insert_id")
+  (return-type "gchar*")
+  (parameters
+    '("GdaDataModel*" "recset")
+  )
 )
 
-(define-function gda_data_model_list_new
-  (c-name "gda_data_model_list_new")
-  (is-constructor-of "GdaDataModelList")
+(define-method execute_single_command
+  (of-object "GdaConnection")
+  (c-name "gda_connection_execute_single_command")
   (return-type "GdaDataModel*")
+  (parameters
+    '("GdaCommand*" "cmd")
+    '("GdaParameterList*" "params")
+    '("GError**" "error")
+  )
 )
 
-(define-function gda_data_model_list_new_from_string_list
-  (c-name "gda_data_model_list_new_from_string_list")
-  (return-type "GdaDataModel*")
+(define-method execute_non_query
+  (of-object "GdaConnection")
+  (c-name "gda_connection_execute_non_query")
+  (return-type "gint")
   (parameters
-    '("const-GList*" "list")
+    '("GdaCommand*" "cmd")
+    '("GdaParameterList*" "params")
+    '("GError**" "error")
   )
 )
 
-(define-method append_value
-  (of-object "GdaDataModelList")
-  (c-name "gda_data_model_list_append_value")
-  (return-type "const-GdaRow*")
+(define-method begin_transaction
+  (of-object "GdaConnection")
+  (c-name "gda_connection_begin_transaction")
+  (return-type "gboolean")
   (parameters
-    '("const-GdaValue*" "value")
+    '("GdaTransaction*" "xaction")
   )
 )
 
+(define-method commit_transaction
+  (of-object "GdaConnection")
+  (c-name "gda_connection_commit_transaction")
+  (return-type "gboolean")
+  (parameters
+    '("GdaTransaction*" "xaction")
+  )
+)
 
+(define-method rollback_transaction
+  (of-object "GdaConnection")
+  (c-name "gda_connection_rollback_transaction")
+  (return-type "gboolean")
+  (parameters
+    '("GdaTransaction*" "xaction")
+  )
+)
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-enum-types.h
+(define-method create_blob
+  (of-object "GdaConnection")
+  (c-name "gda_connection_create_blob")
+  (return-type "GdaBlob*")
+)
 
-(define-function gda_blob_mode_get_type
-  (c-name "gda_blob_mode_get_type")
-  (return-type "GType")
+(define-method fetch_blob_by_id
+  (of-object "GdaConnection")
+  (c-name "gda_connection_fetch_blob_by_id")
+  (return-type "GdaBlob*")
+  (parameters
+    '("const-gchar*" "sql_id")
+  )
 )
 
-(define-function gda_client_event_get_type
-  (c-name "gda_client_event_get_type")
-  (return-type "GType")
+(define-method value_to_sql_string
+  (of-object "GdaConnection")
+  (c-name "gda_connection_value_to_sql_string")
+  (return-type "gchar*")
+  (parameters
+    '("GdaValue*" "from")
+  )
 )
 
-(define-function gda_command_options_get_type
-  (c-name "gda_command_options_get_type")
-  (return-type "GType")
+(define-method supports
+  (of-object "GdaConnection")
+  (c-name "gda_connection_supports")
+  (return-type "gboolean")
+  (parameters
+    '("GdaConnectionFeature" "feature")
+  )
 )
 
-(define-function gda_command_type_get_type
-  (c-name "gda_command_type_get_type")
-  (return-type "GType")
+(define-method get_schema
+  (of-object "GdaConnection")
+  (c-name "gda_connection_get_schema")
+  (return-type "GdaDataModel*")
+  (parameters
+    '("GdaConnectionSchema" "schema")
+    '("GdaParameterList*" "params")
+  )
 )
 
-(define-function gda_connection_options_get_type
-  (c-name "gda_connection_options_get_type")
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-data-model-array.h
+
+(define-function gda_data_model_array_get_type
+  (c-name "gda_data_model_array_get_type")
   (return-type "GType")
 )
 
-(define-function gda_connection_feature_get_type
-  (c-name "gda_connection_feature_get_type")
-  (return-type "GType")
+(define-function gda_data_model_array_new
+  (c-name "gda_data_model_array_new")
+  (is-constructor-of "GdaDataModelArray")
+  (return-type "GdaDataModel*")
+  (parameters
+    '("gint" "cols")
+  )
 )
 
-(define-function gda_connection_schema_get_type
-  (c-name "gda_connection_schema_get_type")
-  (return-type "GType")
+(define-function gda_data_model_array_new_from_xml_node
+  (c-name "gda_data_model_array_new_from_xml_node")
+  (return-type "GdaDataModel*")
+  (parameters
+    '("xmlNodePtr" "node")
+    '("GError**" "error")
+  )
 )
 
-(define-function gda_transaction_isolation_get_type
-  (c-name "gda_transaction_isolation_get_type")
-  (return-type "GType")
+(define-method set_n_columns
+  (of-object "GdaDataModelArray")
+  (c-name "gda_data_model_array_set_n_columns")
+  (return-type "none")
+  (parameters
+    '("gint" "cols")
+  )
 )
 
-(define-function gda_value_type_get_type
-  (c-name "gda_value_type_get_type")
+(define-method clear
+  (of-object "GdaDataModelArray")
+  (c-name "gda_data_model_array_clear")
+  (return-type "none")
+)
+
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-data-model-base.h
+
+(define-function gda_data_model_base_get_type
+  (c-name "gda_data_model_base_get_type")
   (return-type "GType")
 )
 
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-error.h
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-data-model.h
 
-(define-function gda_error_get_type
-  (c-name "gda_error_get_type")
+(define-function gda_data_model_get_type
+  (c-name "gda_data_model_get_type")
   (return-type "GType")
 )
 
-(define-function gda_error_new
-  (c-name "gda_error_new")
-  (is-constructor-of "GdaError")
-  (return-type "GdaError*")
+(define-method freeze
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_freeze")
+  (return-type "none")
 )
 
-(define-method free
-  (of-object "GdaError")
-  (c-name "gda_error_free")
+(define-method thaw
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_thaw")
   (return-type "none")
 )
 
-(define-function gda_error_list_copy
-  (c-name "gda_error_list_copy")
-  (return-type "GList*")
-  (parameters
-    '("const-GList*" "errors")
-  )
+(define-method get_n_rows
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_get_n_rows")
+  (return-type "gint")
 )
 
-(define-function gda_error_list_free
-  (c-name "gda_error_list_free")
-  (return-type "none")
+(define-method get_n_columns
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_get_n_columns")
+  (return-type "gint")
+)
+
+(define-method describe_column
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_describe_column")
+  (return-type "GdaColumn*")
   (parameters
-    '("GList*" "errors")
+    '("gint" "col")
   )
 )
 
-(define-method get_description
-  (of-object "GdaError")
-  (c-name "gda_error_get_description")
+(define-method get_column_title
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_get_column_title")
   (return-type "const-gchar*")
+  (parameters
+    '("gint" "col")
+  )
 )
 
-(define-method set_description
-  (of-object "GdaError")
-  (c-name "gda_error_set_description")
+(define-method set_column_title
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_set_column_title")
   (return-type "none")
   (parameters
-    '("const-gchar*" "description")
+    '("gint" "col")
+    '("const-gchar*" "title")
   )
 )
 
-(define-method get_number
-  (of-object "GdaError")
-  (c-name "gda_error_get_number")
-  (return-type "glong")
+(define-method get_row
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_get_row")
+  (return-type "GdaRow*")
+  (parameters
+    '("gint" "row")
+  )
 )
 
-(define-method set_number
-  (of-object "GdaError")
-  (c-name "gda_error_set_number")
-  (return-type "none")
+(define-method get_value_at
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_get_value_at")
+  (return-type "const-GdaValue*")
   (parameters
-    '("glong" "number")
+    '("gint" "col")
+    '("gint" "row")
   )
 )
 
-(define-method get_source
-  (of-object "GdaError")
-  (c-name "gda_error_get_source")
-  (return-type "const-gchar*")
+(define-method is_updatable
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_is_updatable")
+  (return-type "gboolean")
 )
 
-(define-method set_source
-  (of-object "GdaError")
-  (c-name "gda_error_set_source")
-  (return-type "none")
+(define-method append_values
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_append_values")
+  (return-type "GdaRow*")
   (parameters
-    '("const-gchar*" "source")
+    '("const-GList*" "values")
   )
 )
 
-(define-method get_sqlstate
-  (of-object "GdaError")
-  (c-name "gda_error_get_sqlstate")
-  (return-type "const-gchar*")
+(define-method append_row
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_append_row")
+  (return-type "gboolean")
+  (parameters
+    '("GdaRow*" "row")
+  )
 )
 
-(define-method set_sqlstate
-  (of-object "GdaError")
-  (c-name "gda_error_set_sqlstate")
-  (return-type "none")
+(define-method update_row
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_update_row")
+  (return-type "gboolean")
   (parameters
-    '("const-gchar*" "sqlstate")
+    '("GdaRow*" "row")
   )
 )
 
+(define-method remove_row
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_remove_row")
+  (return-type "gboolean")
+  (parameters
+    '("GdaRow*" "row")
+  )
+)
 
+(define-method append_column
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_append_column")
+  (return-type "GdaColumn*")
+)
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-field.h
-
-(define-function gda_field_attributes_get_type
-  (c-name "gda_field_attributes_get_type")
-  (return-type "GType")
+(define-method remove_column
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_remove_column")
+  (return-type "gboolean")
+  (parameters
+    '("gint" "col")
+  )
 )
 
-(define-function gda_field_attributes_new
-  (c-name "gda_field_attributes_new")
-  (is-constructor-of "GdaFieldAttributes")
-  (return-type "GdaFieldAttributes*")
+(define-method foreach
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_foreach")
+  (return-type "none")
+  (parameters
+    '("GdaDataModelForeachFunc" "func")
+    '("gpointer" "user_data")
+  )
 )
 
-(define-method copy
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_copy")
-  (return-type "GdaFieldAttributes*")
+(define-method has_changed
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_has_changed")
+  (return-type "gboolean")
 )
 
-(define-method free
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_free")
-  (return-type "none")
+(define-method begin_update
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_begin_update")
+  (return-type "gboolean")
 )
 
-(define-method equal
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_equal")
+(define-method cancel_update
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_cancel_update")
   (return-type "gboolean")
-  (parameters
-    '("const-GdaFieldAttributes*" "rhs")
-  )
 )
 
-(define-method get_defined_size
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_defined_size")
-  (return-type "glong")
+(define-method commit_update
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_commit_update")
+  (return-type "gboolean")
 )
 
-(define-method set_defined_size
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_defined_size")
-  (return-type "none")
+(define-method to_text_separated
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_to_text_separated")
+  (return-type "gchar*")
   (parameters
-    '("glong" "size")
+    '("const-gint*" "cols")
+    '("gint" "nb_cols")
+    '("gchar" "sep")
   )
 )
 
-(define-method get_name
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_name")
-  (return-type "const-gchar*")
+(define-method to_xml
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_to_xml")
+  (return-type "gchar*")
+  (parameters
+    '("const-gint*" "cols")
+    '("gint" "nb_cols")
+    '("const-gchar*" "name")
+  )
 )
 
-(define-method set_name
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_name")
-  (return-type "none")
+(define-method to_xml_node
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_to_xml_node")
+  (return-type "xmlNodePtr")
   (parameters
+    '("const-gint*" "cols")
+    '("gint" "nb_cols")
     '("const-gchar*" "name")
   )
 )
 
-(define-method get_table
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_table")
-  (return-type "const-gchar*")
+(define-method add_data_from_xml_node
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_add_data_from_xml_node")
+  (return-type "gboolean")
+  (parameters
+    '("xmlNodePtr" "node")
+  )
 )
 
-(define-method set_table
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_table")
+(define-method dump
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_dump")
   (return-type "none")
   (parameters
-    '("const-gchar*" "table")
+    '("FILE*" "to_stream")
   )
 )
 
-(define-method get_caption
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_caption")
-  (return-type "const-gchar*")
+(define-method dump_as_string
+  (of-object "GdaDataModel")
+  (c-name "gda_data_model_dump_as_string")
+  (return-type "gchar*")
 )
 
-(define-method set_caption
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_caption")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "caption")
-  )
-)
 
-(define-method get_scale
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_scale")
-  (return-type "glong")
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-data-model-hash.h
+
+(define-function gda_data_model_hash_get_type
+  (c-name "gda_data_model_hash_get_type")
+  (return-type "GType")
 )
 
-(define-method set_scale
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_scale")
-  (return-type "none")
+(define-function gda_data_model_hash_new
+  (c-name "gda_data_model_hash_new")
+  (is-constructor-of "GdaDataModelHash")
+  (return-type "GdaDataModel*")
   (parameters
-    '("glong" "scale")
+    '("gint" "cols")
   )
 )
 
-(define-method get_gdatype
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_gdatype")
-  (return-type "GdaValueType")
+(define-method clear
+  (of-object "GdaDataModelHash")
+  (c-name "gda_data_model_hash_clear")
+  (return-type "none")
 )
 
-(define-method set_gdatype
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_gdatype")
+(define-method set_n_columns
+  (of-object "GdaDataModelHash")
+  (c-name "gda_data_model_hash_set_n_columns")
   (return-type "none")
   (parameters
-    '("GdaValueType" "type")
+    '("gint" "cols")
   )
 )
 
-(define-method get_allow_null
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_allow_null")
-  (return-type "gboolean")
-)
-
-(define-method set_allow_null
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_allow_null")
+(define-method insert_row
+  (of-object "GdaDataModelHash")
+  (c-name "gda_data_model_hash_insert_row")
   (return-type "none")
   (parameters
-    '("gboolean" "allow")
+    '("gint" "rownum")
+    '("GdaRow*" "row")
   )
 )
 
-(define-method get_primary_key
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_primary_key")
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-data-model-index.h
+
+(define-function gda_data_model_index_get_type
+  (c-name "gda_data_model_index_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_data_model_index_new
+  (c-name "gda_data_model_index_new")
+  (is-constructor-of "GdaDataModelIndex")
+  (return-type "GdaDataModelIndex*")
+)
+
+(define-method copy
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_copy")
+  (return-type "GdaDataModelIndex*")
+)
+
+(define-method free
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_free")
+  (return-type "none")
+)
+
+(define-method equal
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_equal")
+  (return-type "gboolean")
+  (parameters
+    '("const-GdaDataModelIndex*" "rhs")
+  )
+)
+
+(define-method get_name
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_get_name")
+  (return-type "const-gchar*")
+)
+
+(define-method set_name
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_set_name")
+  (return-type "none")
+  (parameters
+    '("const-gchar*" "name")
+  )
+)
+
+(define-method get_table_name
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_get_table_name")
+  (return-type "const-gchar*")
+)
+
+(define-method set_table_name
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_set_table_name")
+  (return-type "none")
+  (parameters
+    '("const-gchar*" "name")
+  )
+)
+
+(define-method get_primary_key
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_get_primary_key")
   (return-type "gboolean")
 )
 
 (define-method set_primary_key
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_primary_key")
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_set_primary_key")
   (return-type "none")
   (parameters
     '("gboolean" "pk")
@@ -2115,14 +2179,14 @@
 )
 
 (define-method get_unique_key
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_unique_key")
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_get_unique_key")
   (return-type "gboolean")
 )
 
 (define-method set_unique_key
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_unique_key")
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_set_unique_key")
   (return-type "none")
   (parameters
     '("gboolean" "uk")
@@ -2130,68 +2194,141 @@
 )
 
 (define-method get_references
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_references")
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_get_references")
   (return-type "const-gchar*")
 )
 
 (define-method set_references
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_references")
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_set_references")
   (return-type "none")
   (parameters
     '("const-gchar*" "ref")
   )
 )
 
-(define-method get_auto_increment
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_auto_increment")
-  (return-type "gboolean")
+(define-method get_column_index_list
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_get_column_index_list")
+  (return-type "GList*")
 )
 
-(define-method set_auto_increment
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_auto_increment")
+(define-method set_column_index_list
+  (of-object "GdaDataModelIndex")
+  (c-name "gda_data_model_index_set_column_index_list")
   (return-type "none")
   (parameters
-    '("gboolean" "is_auto")
+    '("GList*" "col_idx_list")
   )
 )
 
-(define-method get_position
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_position")
-  (return-type "gint")
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-data-model-list.h
+
+(define-function gda_data_model_list_get_type
+  (c-name "gda_data_model_list_get_type")
+  (return-type "GType")
 )
 
-(define-method set_position
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_position")
-  (return-type "none")
-  (parameters
-    '("gint" "position")
-  )
+(define-function gda_data_model_list_new
+  (c-name "gda_data_model_list_new")
+  (is-constructor-of "GdaDataModelList")
+  (return-type "GdaDataModel*")
 )
 
-(define-method get_default_value
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_get_default_value")
-  (return-type "const-GdaValue*")
+(define-function gda_data_model_list_new_from_string_list
+  (c-name "gda_data_model_list_new_from_string_list")
+  (return-type "GdaDataModel*")
+  (parameters
+    '("const-GList*" "list")
+  )
 )
 
-(define-method set_default_value
-  (of-object "GdaFieldAttributes")
-  (c-name "gda_field_attributes_set_default_value")
-  (return-type "none")
+(define-method append_value
+  (of-object "GdaDataModelList")
+  (c-name "gda_data_model_list_append_value")
+  (return-type "GdaRow*")
   (parameters
-    '("const-GdaValue*" "default_value")
+    '("const-GdaValue*" "value")
   )
 )
 
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-enum-types.h
+
+(define-function gda_blob_mode_get_type
+  (c-name "gda_blob_mode_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_client_event_get_type
+  (c-name "gda_client_event_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_client_specs_type_get_type
+  (c-name "gda_client_specs_type_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_command_options_get_type
+  (c-name "gda_command_options_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_command_type_get_type
+  (c-name "gda_command_type_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_connection_options_get_type
+  (c-name "gda_connection_options_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_connection_feature_get_type
+  (c-name "gda_connection_feature_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_connection_schema_get_type
+  (c-name "gda_connection_schema_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_connection_event_type_get_type
+  (c-name "gda_connection_event_type_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_connection_event_code_get_type
+  (c-name "gda_connection_event_code_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_sorting_get_type
+  (c-name "gda_sorting_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_transaction_isolation_get_type
+  (c-name "gda_transaction_isolation_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_value_type_get_type
+  (c-name "gda_value_type_get_type")
+  (return-type "GType")
+)
+
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-intl.h
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-log.h
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-log.h
 
 (define-function gda_log_enable
   (c-name "gda_log_enable")
@@ -2228,11 +2365,11 @@
 
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-marshal.h
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-marshal.h
 
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-parameter.h
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-parameter.h
 
 (define-function gda_parameter_get_type
   (c-name "gda_parameter_get_type")
@@ -2290,2699 +2427,1599 @@
   (return-type "GdaParameter*")
 )
 
-(define-method free
-  (of-object "GdaParameter")
-  (c-name "gda_parameter_free")
-  (return-type "none")
-)
-
-(define-method get_name
-  (of-object "GdaParameter")
-  (c-name "gda_parameter_get_name")
-  (return-type "const-gchar*")
-)
-
-(define-method set_name
-  (of-object "GdaParameter")
-  (c-name "gda_parameter_set_name")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "name")
-  )
-)
-
-(define-method get_value
-  (of-object "GdaParameter")
-  (c-name "gda_parameter_get_value")
-  (return-type "const-GdaValue*")
-)
-
-(define-method set_value
-  (of-object "GdaParameter")
-  (c-name "gda_parameter_set_value")
-  (return-type "none")
-  (parameters
-    '("GdaValue*" "value")
-  )
-)
-
-(define-function gda_parameter_list_get_type
-  (c-name "gda_parameter_list_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_parameter_list_new
-  (c-name "gda_parameter_list_new")
-  (is-constructor-of "GdaParameterList")
-  (return-type "GdaParameterList*")
-)
-
-(define-method free
-  (of-object "GdaParameterList")
-  (c-name "gda_parameter_list_free")
-  (return-type "none")
-)
-
-(define-method copy
-  (of-object "GdaParameterList")
-  (c-name "gda_parameter_list_copy")
-  (return-type "GdaParameterList*")
-)
-
-(define-method add_parameter
-  (of-object "GdaParameterList")
-  (c-name "gda_parameter_list_add_parameter")
-  (return-type "none")
-  (parameters
-    '("GdaParameter*" "param")
-  )
-)
-
-(define-method get_names
-  (of-object "GdaParameterList")
-  (c-name "gda_parameter_list_get_names")
-  (return-type "GList*")
-)
-
-(define-method find
-  (of-object "GdaParameterList")
-  (c-name "gda_parameter_list_find")
-  (return-type "GdaParameter*")
-  (parameters
-    '("const-gchar*" "name")
-  )
-)
-
-(define-method clear
-  (of-object "GdaParameterList")
-  (c-name "gda_parameter_list_clear")
-  (return-type "none")
-)
-
-(define-method get_length
-  (of-object "GdaParameterList")
-  (c-name "gda_parameter_list_get_length")
-  (return-type "guint")
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-quark-list.h
-
-(define-function gda_quark_list_get_type
-  (c-name "gda_quark_list_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_quark_list_new
-  (c-name "gda_quark_list_new")
-  (is-constructor-of "GdaQuarkList")
-  (return-type "GdaQuarkList*")
-)
-
-(define-function gda_quark_list_new_from_string
-  (c-name "gda_quark_list_new_from_string")
-  (return-type "GdaQuarkList*")
-  (parameters
-    '("const-gchar*" "string")
-  )
-)
-
-(define-method copy
-  (of-object "GdaQuarkList")
-  (c-name "gda_quark_list_copy")
-  (return-type "GdaQuarkList*")
-)
-
-(define-method free
-  (of-object "GdaQuarkList")
-  (c-name "gda_quark_list_free")
-  (return-type "none")
-)
-
-(define-method add_from_string
-  (of-object "GdaQuarkList")
-  (c-name "gda_quark_list_add_from_string")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "string")
-    '("gboolean" "cleanup")
-  )
-)
-
-(define-method find
-  (of-object "GdaQuarkList")
-  (c-name "gda_quark_list_find")
-  (return-type "const-gchar*")
-  (parameters
-    '("const-gchar*" "name")
-  )
-)
-
-(define-method remove
-  (of-object "GdaQuarkList")
-  (c-name "gda_quark_list_remove")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "name")
-  )
-)
-
-(define-method clear
-  (of-object "GdaQuarkList")
-  (c-name "gda_quark_list_clear")
-  (return-type "none")
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-row.h
-
-(define-function gda_row_get_type
-  (c-name "gda_row_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_row_new
-  (c-name "gda_row_new")
-  (is-constructor-of "GdaRow")
-  (return-type "GdaRow*")
-  (parameters
-    '("GdaDataModel*" "model")
-    '("gint" "count")
-  )
-)
-
-(define-function gda_row_new_from_list
-  (c-name "gda_row_new_from_list")
-  (return-type "GdaRow*")
-  (parameters
-    '("GdaDataModel*" "model")
-    '("const-GList*" "values")
-  )
-)
-
-(define-method copy
-  (of-object "GdaRow")
-  (c-name "gda_row_copy")
-  (return-type "GdaRow*")
-)
-
-(define-method free
-  (of-object "GdaRow")
-  (c-name "gda_row_free")
-  (return-type "none")
-)
-
-(define-method get_model
-  (of-object "GdaRow")
-  (c-name "gda_row_get_model")
-  (return-type "GdaDataModel*")
-)
-
-(define-method get_number
-  (of-object "GdaRow")
-  (c-name "gda_row_get_number")
-  (return-type "gint")
-)
-
-(define-method set_number
-  (of-object "GdaRow")
-  (c-name "gda_row_set_number")
-  (return-type "none")
-  (parameters
-    '("gint" "number")
-  )
-)
-
-(define-method get_id
-  (of-object "GdaRow")
-  (c-name "gda_row_get_id")
-  (return-type "const-gchar*")
-)
-
-(define-method set_id
-  (of-object "GdaRow")
-  (c-name "gda_row_set_id")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "id")
-  )
-)
-
-(define-method get_value
-  (of-object "GdaRow")
-  (c-name "gda_row_get_value")
-  (return-type "GdaValue*")
-  (parameters
-    '("gint" "num")
-  )
-)
-
-(define-method get_length
-  (of-object "GdaRow")
-  (c-name "gda_row_get_length")
-  (return-type "gint")
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-select.h
-
-(define-function gda_select_get_type
-  (c-name "gda_select_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_select_new
-  (c-name "gda_select_new")
-  (is-constructor-of "GdaSelect")
-  (return-type "GdaDataModel*")
-)
-
-(define-method add_source
-  (of-object "GdaSelect")
-  (c-name "gda_select_add_source")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "name")
-    '("GdaDataModel*" "source")
-  )
-)
-
-(define-method set_sql
-  (of-object "GdaSelect")
-  (c-name "gda_select_set_sql")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "sql")
-  )
-)
-
-(define-method run
-  (of-object "GdaSelect")
-  (c-name "gda_select_run")
-  (return-type "gboolean")
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-server-provider.h
-
-(define-function gda_server_provider_get_type
-  (c-name "gda_server_provider_get_type")
-  (return-type "GType")
-)
-
-(define-method get_version
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_get_version")
-  (return-type "const-gchar*")
-)
-
-(define-method open_connection
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_open_connection")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("GdaQuarkList*" "params")
-    '("const-gchar*" "username")
-    '("const-gchar*" "password")
-  )
-)
-
-(define-method reset_connection
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_reset_connection")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-  )
-)
-
-(define-method close_connection
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_close_connection")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-  )
-)
-
-(define-method get_server_version
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_get_server_version")
-  (return-type "const-gchar*")
-  (parameters
-    '("GdaConnection*" "cnc")
-  )
-)
-
-(define-method get_database
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_get_database")
-  (return-type "const-gchar*")
-  (parameters
-    '("GdaConnection*" "cnc")
-  )
-)
-
-(define-method change_database
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_change_database")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("const-gchar*" "name")
-  )
-)
-
-(define-method create_database
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_create_database")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("const-gchar*" "name")
-  )
-)
-
-(define-method drop_database
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_drop_database")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("const-gchar*" "name")
-  )
-)
-
-(define-method create_table
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_create_table")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("const-gchar*" "table_name")
-    '("const-GdaFieldAttributes*[]" "attributes")
-  )
-)
-
-(define-method drop_table
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_drop_table")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("const-gchar*" "table_name")
-  )
-)
-
-(define-method execute_command
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_execute_command")
-  (return-type "GList*")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("GdaCommand*" "cmd")
-    '("GdaParameterList*" "params" (null-ok) (default "NULL"))
-  )
-)
-
-(define-method get_last_insert_id
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_get_last_insert_id")
-  (return-type "gchar*")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("GdaDataModel*" "recset")
-  )
-)
-
-(define-method begin_transaction
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_begin_transaction")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("GdaTransaction*" "xaction")
-  )
-)
-
-(define-method commit_transaction
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_commit_transaction")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("GdaTransaction*" "xaction")
-  )
-)
-
-(define-method rollback_transaction
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_rollback_transaction")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("GdaTransaction*" "xaction")
-  )
-)
-
-(define-method supports
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_supports")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("GdaConnectionFeature" "feature")
-  )
-)
-
-(define-method get_schema
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_get_schema")
-  (return-type "GdaDataModel*")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("GdaConnectionSchema" "schema")
-    '("GdaParameterList*" "params" (null-ok) (default "NULL"))
-  )
-)
-
-(define-method create_blob
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_create_blob")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("GdaBlob*" "blob")
-  )
-)
-
-(define-method escape_string
-  (of-object "GdaServerProvider")
-  (c-name "gda_server_provider_escape_string")
-  (return-type "gboolean")
-  (parameters
-    '("GdaConnection*" "cnc")
-    '("const-gchar*" "from")
-    '("gchar*" "to")
-  )
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-table.h
-
-(define-function gda_table_get_type
-  (c-name "gda_table_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_table_new
-  (c-name "gda_table_new")
-  (is-constructor-of "GdaTable")
-  (return-type "GdaTable*")
-  (parameters
-    '("const-gchar*" "name")
-  )
-)
-
-(define-function gda_table_new_from_model
-  (c-name "gda_table_new_from_model")
-  (return-type "GdaTable*")
-  (parameters
-    '("const-gchar*" "name")
-    '("const-GdaDataModel*" "model")
-    '("gboolean" "add_data")
-  )
-)
-
-(define-method get_name
-  (of-object "GdaTable")
-  (c-name "gda_table_get_name")
-  (return-type "const-gchar*")
-)
-
-(define-method set_name
-  (of-object "GdaTable")
-  (c-name "gda_table_set_name")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "name")
-  )
-)
-
-(define-method add_field
-  (of-object "GdaTable")
-  (c-name "gda_table_add_field")
-  (return-type "none")
-  (parameters
-    '("const-GdaFieldAttributes*" "fa")
-  )
-)
-
-(define-method add_data_from_model
-  (of-object "GdaTable")
-  (c-name "gda_table_add_data_from_model")
-  (return-type "none")
-  (parameters
-    '("const-GdaDataModel*" "model")
-  )
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-transaction.h
-
-(define-function gda_transaction_get_type
-  (c-name "gda_transaction_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_transaction_new
-  (c-name "gda_transaction_new")
-  (is-constructor-of "GdaTransaction")
-  (return-type "GdaTransaction*")
-  (parameters
-    '("const-gchar*" "name")
-  )
-)
-
-(define-method get_isolation_level
-  (of-object "GdaTransaction")
-  (c-name "gda_transaction_get_isolation_level")
-  (return-type "GdaTransactionIsolation")
-)
-
-(define-method set_isolation_level
-  (of-object "GdaTransaction")
-  (c-name "gda_transaction_set_isolation_level")
-  (return-type "none")
-  (parameters
-    '("GdaTransactionIsolation" "level")
-  )
-)
-
-(define-method get_name
-  (of-object "GdaTransaction")
-  (c-name "gda_transaction_get_name")
-  (return-type "const-gchar*")
-)
-
-(define-method set_name
-  (of-object "GdaTransaction")
-  (c-name "gda_transaction_set_name")
-  (return-type "none")
-  (parameters
-    '("const-gchar*" "name")
-  )
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-util.h
-
-(define-function gda_type_to_string
-  (c-name "gda_type_to_string")
-  (return-type "const-gchar*")
-  (parameters
-    '("GdaValueType" "type")
-  )
-)
-
-(define-function gda_type_from_string
-  (c-name "gda_type_from_string")
-  (return-type "GdaValueType")
-  (parameters
-    '("const-gchar*" "str")
-  )
-)
-
-(define-function gda_string_hash_to_list
-  (c-name "gda_string_hash_to_list")
-  (return-type "GList*")
-  (parameters
-    '("GHashTable*" "hash_table")
-  )
-)
-
-(define-function gda_sql_replace_placeholders
-  (c-name "gda_sql_replace_placeholders")
-  (return-type "gchar*")
-  (parameters
-    '("const-gchar*" "sql")
-    '("GdaParameterList*" "params" (null-ok) (default "NULL"))
-  )
-)
-
-(define-function gda_file_load
-  (c-name "gda_file_load")
-  (return-type "gchar*")
-  (parameters
-    '("const-gchar*" "filename")
-  )
-)
-
-(define-function gda_file_save
-  (c-name "gda_file_save")
-  (return-type "gboolean")
-  (parameters
-    '("const-gchar*" "filename")
-    '("const-gchar*" "buffer")
-    '("gint" "len")
-  )
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-value.h
-
-(define-function gda_value_get_gtype
-  (c-name "gda_value_get_gtype")
-  (return-type "GType")
-)
-
-(define-function gda_value_new_null
-  (c-name "gda_value_new_null")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-)
-
-(define-function gda_value_new_bigint
-  (c-name "gda_value_new_bigint")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("gint64" "val")
-  )
-)
-
-(define-function gda_value_new_biguint
-  (c-name "gda_value_new_biguint")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("guint64" "val")
-  )
-)
-
-(define-function gda_value_new_binary
-  (c-name "gda_value_new_binary")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("gconstpointer" "val")
-    '("glong" "size")
-  )
-)
-
-(define-function gda_value_new_blob
-  (c-name "gda_value_new_blob")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-GdaBlob*" "val")
-  )
-)
-
-(define-function gda_value_new_boolean
-  (c-name "gda_value_new_boolean")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("gboolean" "val")
-  )
-)
-
-(define-function gda_value_new_date
-  (c-name "gda_value_new_date")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-GdaDate*" "val")
-  )
-)
-
-(define-function gda_value_new_double
-  (c-name "gda_value_new_double")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("gdouble" "val")
-  )
-)
-
-(define-function gda_value_new_geometric_point
-  (c-name "gda_value_new_geometric_point")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-GdaGeometricPoint*" "val")
-  )
-)
-
-(define-function gda_value_new_gobject
-  (c-name "gda_value_new_gobject")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-GObject*" "val")
-  )
-)
-
-(define-function gda_value_new_integer
-  (c-name "gda_value_new_integer")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("gint" "val")
-  )
-)
-
-(define-function gda_value_new_list
-  (c-name "gda_value_new_list")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-GdaValueList*" "val")
-  )
-)
-
-(define-function gda_value_new_money
-  (c-name "gda_value_new_money")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-GdaMoney*" "val")
-  )
-)
-
-(define-function gda_value_new_numeric
-  (c-name "gda_value_new_numeric")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-GdaNumeric*" "val")
-  )
-)
-
-(define-function gda_value_new_single
-  (c-name "gda_value_new_single")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("gfloat" "val")
-  )
-)
-
-(define-function gda_value_new_smallint
-  (c-name "gda_value_new_smallint")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("gshort" "val")
-  )
-)
-
-(define-function gda_value_new_smalluint
-  (c-name "gda_value_new_smalluint")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("gushort" "val")
-  )
-)
-
-(define-function gda_value_new_string
-  (c-name "gda_value_new_string")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-gchar*" "val")
-  )
-)
-
-(define-function gda_value_new_time
-  (c-name "gda_value_new_time")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-GdaTime*" "val")
-  )
-)
-
-(define-function gda_value_new_timestamp
-  (c-name "gda_value_new_timestamp")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-GdaTimestamp*" "val")
-  )
-)
-
-(define-function gda_value_new_timestamp_from_timet
-  (c-name "gda_value_new_timestamp_from_timet")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("time_t" "val")
-  )
-)
-
-(define-function gda_value_new_tinyint
-  (c-name "gda_value_new_tinyint")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("gchar" "val")
-  )
-)
-
-(define-function gda_value_new_tinyuint
-  (c-name "gda_value_new_tinyuint")
-  (return-type "GdaValue*")
-  (parameters
-    '("guchar" "val")
-  )
-)
-
-(define-function gda_value_new_type
-  (c-name "gda_value_new_type")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("GdaValueType" "val")
-  )
-)
-
-(define-function gda_value_new_uinteger
-  (c-name "gda_value_new_uinteger")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("guint" "val")
-  )
-)
-
-(define-function gda_value_new_from_string
-  (c-name "gda_value_new_from_string")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-gchar*" "as_string")
-    '("GdaValueType" "type")
-  )
-)
-
-(define-function gda_value_new_from_xml
-  (c-name "gda_value_new_from_xml")
-  (is-constructor-of "GdaValue")
-  (return-type "GdaValue*")
-  (parameters
-    '("const-xmlNodePtr" "node")
-  )
-)
-
-(define-method free
-  (of-object "GdaValue")
-  (c-name "gda_value_free")
-  (return-type "none")
-)
-
-(define-method get_type
-  (of-object "GdaValue")
-  (c-name "gda_value_get_type")
-  (return-type "GdaValueType")
-)
-
-(define-method is_null
-  (of-object "GdaValue")
-  (c-name "gda_value_is_null")
-  (return-type "gboolean")
-)
-
-(define-method is_number
-  (of-object "GdaValue")
-  (c-name "gda_value_is_number")
-  (return-type "gboolean")
-)
-
-(define-method copy
-  (of-object "GdaValue")
-  (c-name "gda_value_copy")
-  (return-type "GdaValue*")
-)
-
-(define-method get_bigint
-  (of-object "GdaValue")
-  (c-name "gda_value_get_bigint")
-  (return-type "gint64")
-)
-
-(define-method set_bigint
-  (of-object "GdaValue")
-  (c-name "gda_value_set_bigint")
-  (return-type "none")
-  (parameters
-    '("gint64" "val")
-  )
-)
-
-(define-method get_biguint
-  (of-object "GdaValue")
-  (c-name "gda_value_get_biguint")
-  (return-type "guint64")
-)
-
-(define-method set_biguint
-  (of-object "GdaValue")
-  (c-name "gda_value_set_biguint")
+(define-method free
+  (of-object "GdaParameter")
+  (c-name "gda_parameter_free")
   (return-type "none")
-  (parameters
-    '("guint64" "val")
-  )
 )
 
-(define-method get_binary
-  (of-object "GdaValue")
-  (c-name "gda_value_get_binary")
-  (return-type "const-gpointer")
-  (parameters
-    '("glong*" "size")
-  )
+(define-method get_name
+  (of-object "GdaParameter")
+  (c-name "gda_parameter_get_name")
+  (return-type "const-gchar*")
 )
 
-(define-method set_binary
-  (of-object "GdaValue")
-  (c-name "gda_value_set_binary")
+(define-method set_name
+  (of-object "GdaParameter")
+  (c-name "gda_parameter_set_name")
   (return-type "none")
   (parameters
-    '("gconstpointer" "val")
-    '("glong" "size")
+    '("const-gchar*" "name")
   )
 )
 
-(define-method get_blob
-  (of-object "GdaValue")
-  (c-name "gda_value_get_blob")
-  (return-type "const-GdaBlob*")
+(define-method get_value
+  (of-object "GdaParameter")
+  (c-name "gda_parameter_get_value")
+  (return-type "const-GdaValue*")
 )
 
-(define-method set_blob
-  (of-object "GdaValue")
-  (c-name "gda_value_set_blob")
+(define-method set_value
+  (of-object "GdaParameter")
+  (c-name "gda_parameter_set_value")
   (return-type "none")
   (parameters
-    '("const-GdaBlob*" "val")
+    '("GdaValue*" "value")
   )
 )
 
-(define-method get_boolean
-  (of-object "GdaValue")
-  (c-name "gda_value_get_boolean")
-  (return-type "gboolean")
+(define-function gda_parameter_list_get_type
+  (c-name "gda_parameter_list_get_type")
+  (return-type "GType")
 )
 
-(define-method set_boolean
-  (of-object "GdaValue")
-  (c-name "gda_value_set_boolean")
+(define-function gda_parameter_list_new
+  (c-name "gda_parameter_list_new")
+  (is-constructor-of "GdaParameterList")
+  (return-type "GdaParameterList*")
+)
+
+(define-method free
+  (of-object "GdaParameterList")
+  (c-name "gda_parameter_list_free")
   (return-type "none")
-  (parameters
-    '("gboolean" "val")
-  )
 )
 
-(define-method get_date
-  (of-object "GdaValue")
-  (c-name "gda_value_get_date")
-  (return-type "const-GdaDate*")
+(define-method copy
+  (of-object "GdaParameterList")
+  (c-name "gda_parameter_list_copy")
+  (return-type "GdaParameterList*")
 )
 
-(define-method set_date
-  (of-object "GdaValue")
-  (c-name "gda_value_set_date")
+(define-method add_parameter
+  (of-object "GdaParameterList")
+  (c-name "gda_parameter_list_add_parameter")
   (return-type "none")
   (parameters
-    '("const-GdaDate*" "val")
+    '("GdaParameter*" "param")
   )
 )
 
-(define-method get_double
-  (of-object "GdaValue")
-  (c-name "gda_value_get_double")
-  (return-type "gdouble")
+(define-method get_names
+  (of-object "GdaParameterList")
+  (c-name "gda_parameter_list_get_names")
+  (return-type "GList*")
 )
 
-(define-method set_double
-  (of-object "GdaValue")
-  (c-name "gda_value_set_double")
-  (return-type "none")
+(define-method find
+  (of-object "GdaParameterList")
+  (c-name "gda_parameter_list_find")
+  (return-type "GdaParameter*")
   (parameters
-    '("gdouble" "val")
+    '("const-gchar*" "name")
   )
 )
 
-(define-method get_geometric_point
-  (of-object "GdaValue")
-  (c-name "gda_value_get_geometric_point")
-  (return-type "const-GdaGeometricPoint*")
+(define-method clear
+  (of-object "GdaParameterList")
+  (c-name "gda_parameter_list_clear")
+  (return-type "none")
 )
 
-(define-method set_geometric_point
-  (of-object "GdaValue")
-  (c-name "gda_value_set_geometric_point")
-  (return-type "none")
-  (parameters
-    '("const-GdaGeometricPoint*" "val")
-  )
+(define-method get_length
+  (of-object "GdaParameterList")
+  (c-name "gda_parameter_list_get_length")
+  (return-type "guint")
 )
 
-(define-method get_gobject
-  (of-object "GdaValue")
-  (c-name "gda_value_get_gobject")
-  (return-type "const-GObject*")
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-quark-list.h
+
+(define-function gda_quark_list_get_type
+  (c-name "gda_quark_list_get_type")
+  (return-type "GType")
 )
 
-(define-method set_gobject
-  (of-object "GdaValue")
-  (c-name "gda_value_set_gobject")
-  (return-type "none")
+(define-function gda_quark_list_new
+  (c-name "gda_quark_list_new")
+  (is-constructor-of "GdaQuarkList")
+  (return-type "GdaQuarkList*")
+)
+
+(define-function gda_quark_list_new_from_string
+  (c-name "gda_quark_list_new_from_string")
+  (return-type "GdaQuarkList*")
   (parameters
-    '("const-GObject*" "val")
+    '("const-gchar*" "string")
   )
 )
 
-(define-method get_integer
-  (of-object "GdaValue")
-  (c-name "gda_value_get_integer")
-  (return-type "gint")
+(define-method copy
+  (of-object "GdaQuarkList")
+  (c-name "gda_quark_list_copy")
+  (return-type "GdaQuarkList*")
 )
 
-(define-method set_integer
-  (of-object "GdaValue")
-  (c-name "gda_value_set_integer")
+(define-method free
+  (of-object "GdaQuarkList")
+  (c-name "gda_quark_list_free")
+  (return-type "none")
+)
+
+(define-method add_from_string
+  (of-object "GdaQuarkList")
+  (c-name "gda_quark_list_add_from_string")
   (return-type "none")
   (parameters
-    '("gint" "val")
+    '("const-gchar*" "string")
+    '("gboolean" "cleanup")
   )
 )
 
-(define-method get_list
-  (of-object "GdaValue")
-  (c-name "gda_value_get_list")
-  (return-type "const-GdaValueList*")
+(define-method find
+  (of-object "GdaQuarkList")
+  (c-name "gda_quark_list_find")
+  (return-type "const-gchar*")
+  (parameters
+    '("const-gchar*" "name")
+  )
 )
 
-(define-method set_list
-  (of-object "GdaValue")
-  (c-name "gda_value_set_list")
+(define-method remove
+  (of-object "GdaQuarkList")
+  (c-name "gda_quark_list_remove")
   (return-type "none")
   (parameters
-    '("const-GdaValueList*" "val")
+    '("const-gchar*" "name")
   )
 )
 
-(define-method set_null
-  (of-object "GdaValue")
-  (c-name "gda_value_set_null")
+(define-method clear
+  (of-object "GdaQuarkList")
+  (c-name "gda_quark_list_clear")
   (return-type "none")
 )
 
-(define-method get_money
-  (of-object "GdaValue")
-  (c-name "gda_value_get_money")
-  (return-type "const-GdaMoney*")
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-row.h
+
+(define-function gda_row_get_type
+  (c-name "gda_row_get_type")
+  (return-type "GType")
 )
 
-(define-method set_money
-  (of-object "GdaValue")
-  (c-name "gda_value_set_money")
-  (return-type "none")
+(define-function gda_row_new
+  (c-name "gda_row_new")
+  (is-constructor-of "GdaRow")
+  (return-type "GdaRow*")
   (parameters
-    '("const-GdaMoney*" "val")
+    '("GdaDataModel*" "model")
+    '("gint" "count")
   )
 )
 
-(define-method get_numeric
-  (of-object "GdaValue")
-  (c-name "gda_value_get_numeric")
-  (return-type "const-GdaNumeric*")
-)
-
-(define-method set_numeric
-  (of-object "GdaValue")
-  (c-name "gda_value_set_numeric")
-  (return-type "none")
+(define-function gda_row_new_from_list
+  (c-name "gda_row_new_from_list")
+  (return-type "GdaRow*")
   (parameters
-    '("const-GdaNumeric*" "val")
+    '("GdaDataModel*" "model")
+    '("const-GList*" "values")
   )
 )
 
-(define-method get_single
-  (of-object "GdaValue")
-  (c-name "gda_value_get_single")
-  (return-type "gfloat")
+(define-method copy
+  (of-object "GdaRow")
+  (c-name "gda_row_copy")
+  (return-type "GdaRow*")
 )
 
-(define-method set_single
-  (of-object "GdaValue")
-  (c-name "gda_value_set_single")
+(define-method set_model
+  (of-object "GdaRow")
+  (c-name "gda_row_set_model")
   (return-type "none")
   (parameters
-    '("gfloat" "val")
+    '("GdaDataModel*" "model")
   )
 )
 
-(define-method get_smallint
-  (of-object "GdaValue")
-  (c-name "gda_value_get_smallint")
-  (return-type "gshort")
+(define-method get_model
+  (of-object "GdaRow")
+  (c-name "gda_row_get_model")
+  (return-type "GdaDataModel*")
 )
 
-(define-method set_smallint
-  (of-object "GdaValue")
-  (c-name "gda_value_set_smallint")
-  (return-type "none")
-  (parameters
-    '("gshort" "val")
-  )
+(define-method get_length
+  (of-object "GdaRow")
+  (c-name "gda_row_get_length")
+  (return-type "gint")
 )
 
-(define-method get_smalluint
-  (of-object "GdaValue")
-  (c-name "gda_value_get_smalluint")
-  (return-type "gushort")
+(define-method get_number
+  (of-object "GdaRow")
+  (c-name "gda_row_get_number")
+  (return-type "gint")
 )
 
-(define-method set_smalluint
-  (of-object "GdaValue")
-  (c-name "gda_value_set_smalluint")
+(define-method set_number
+  (of-object "GdaRow")
+  (c-name "gda_row_set_number")
   (return-type "none")
   (parameters
-    '("gushort" "val")
+    '("gint" "number")
   )
 )
 
-(define-method get_string
-  (of-object "GdaValue")
-  (c-name "gda_value_get_string")
+(define-method get_id
+  (of-object "GdaRow")
+  (c-name "gda_row_get_id")
   (return-type "const-gchar*")
 )
 
-(define-method set_string
-  (of-object "GdaValue")
-  (c-name "gda_value_set_string")
+(define-method set_id
+  (of-object "GdaRow")
+  (c-name "gda_row_set_id")
   (return-type "none")
   (parameters
-    '("const-gchar*" "val")
+    '("const-gchar*" "id")
   )
 )
 
-(define-method get_time
-  (of-object "GdaValue")
-  (c-name "gda_value_get_time")
-  (return-type "const-GdaTime*")
+(define-method get_value
+  (of-object "GdaRow")
+  (c-name "gda_row_get_value")
+  (return-type "GdaValue*")
+  (parameters
+    '("gint" "num")
+  )
 )
 
-(define-method set_time
-  (of-object "GdaValue")
-  (c-name "gda_value_set_time")
-  (return-type "none")
+(define-method set_value
+  (of-object "GdaRow")
+  (c-name "gda_row_set_value")
+  (return-type "gboolean")
   (parameters
-    '("const-GdaTime*" "val")
+    '("gint" "num")
+    '("const-GdaValue*" "value")
   )
 )
 
-(define-method get_timestamp
-  (of-object "GdaValue")
-  (c-name "gda_value_get_timestamp")
-  (return-type "const-GdaTimestamp*")
+(define-method set_is_default
+  (of-object "GdaRow")
+  (c-name "gda_row_set_is_default")
+  (return-type "none")
+  (parameters
+    '("gint" "num")
+    '("gboolean" "is_default")
+  )
 )
 
-(define-method set_timestamp
-  (of-object "GdaValue")
-  (c-name "gda_value_set_timestamp")
-  (return-type "none")
+(define-method get_is_default
+  (of-object "GdaRow")
+  (c-name "gda_row_get_is_default")
+  (return-type "gboolean")
   (parameters
-    '("const-GdaTimestamp*" "val")
+    '("gint" "num")
   )
 )
 
-(define-method get_tinyint
-  (of-object "GdaValue")
-  (c-name "gda_value_get_tinyint")
-  (return-type "gchar")
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-select.h
+
+(define-function gda_select_get_type
+  (c-name "gda_select_get_type")
+  (return-type "GType")
 )
 
-(define-method set_tinyint
-  (of-object "GdaValue")
-  (c-name "gda_value_set_tinyint")
+(define-function gda_select_new
+  (c-name "gda_select_new")
+  (is-constructor-of "GdaSelect")
+  (return-type "GdaDataModel*")
+)
+
+(define-method add_source
+  (of-object "GdaSelect")
+  (c-name "gda_select_add_source")
   (return-type "none")
   (parameters
-    '("gchar" "val")
+    '("const-gchar*" "name")
+    '("GdaDataModel*" "source")
   )
 )
 
-(define-method get_tinyuint
-  (of-object "GdaValue")
-  (c-name "gda_value_get_tinyuint")
-  (return-type "guchar")
-)
-
-(define-method set_tinyuint
-  (of-object "GdaValue")
-  (c-name "gda_value_set_tinyuint")
+(define-method set_sql
+  (of-object "GdaSelect")
+  (c-name "gda_select_set_sql")
   (return-type "none")
   (parameters
-    '("guchar" "val")
+    '("const-gchar*" "sql")
   )
 )
 
-(define-method get_uinteger
-  (of-object "GdaValue")
-  (c-name "gda_value_get_uinteger")
-  (return-type "guint")
+(define-method run
+  (of-object "GdaSelect")
+  (c-name "gda_select_run")
+  (return-type "gboolean")
 )
 
-(define-method set_uinteger
-  (of-object "GdaValue")
-  (c-name "gda_value_set_uinteger")
-  (return-type "none")
-  (parameters
-    '("guint" "val")
-  )
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-server-provider.h
+
+(define-function gda_server_provider_get_type
+  (c-name "gda_server_provider_get_type")
+  (return-type "GType")
 )
 
-(define-method get_vtype
-  (of-object "GdaValue")
-  (c-name "gda_value_get_vtype")
-  (return-type "GdaValueType")
+(define-method get_version
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_get_version")
+  (return-type "const-gchar*")
 )
 
-(define-method set_vtype
-  (of-object "GdaValue")
-  (c-name "gda_value_set_vtype")
-  (return-type "none")
+(define-method open_connection
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_open_connection")
+  (return-type "gboolean")
   (parameters
-    '("GdaValueType" "type")
+    '("GdaConnection*" "cnc")
+    '("GdaQuarkList*" "params")
+    '("const-gchar*" "username")
+    '("const-gchar*" "password")
   )
 )
 
-(define-method set_from_string
-  (of-object "GdaValue")
-  (c-name "gda_value_set_from_string")
+(define-method reset_connection
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_reset_connection")
   (return-type "gboolean")
   (parameters
-    '("const-gchar*" "as_string")
-    '("GdaValueType" "type")
+    '("GdaConnection*" "cnc")
   )
 )
 
-(define-method set_from_value
-  (of-object "GdaValue")
-  (c-name "gda_value_set_from_value")
+(define-method close_connection
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_close_connection")
   (return-type "gboolean")
   (parameters
-    '("const-GdaValue*" "from")
+    '("GdaConnection*" "cnc")
   )
 )
 
-(define-method compare
-  (of-object "GdaValue")
-  (c-name "gda_value_compare")
-  (return-type "gint")
+(define-method get_server_version
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_get_server_version")
+  (return-type "const-gchar*")
   (parameters
-    '("GdaValue*" "value2")
+    '("GdaConnection*" "cnc")
   )
 )
 
-(define-method stringify
-  (of-object "GdaValue")
-  (c-name "gda_value_stringify")
-  (return-type "gchar*")
+(define-method get_database
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_get_database")
+  (return-type "const-gchar*")
+  (parameters
+    '("GdaConnection*" "cnc")
+  )
 )
 
-(define-method to_xml
-  (of-object "GdaValue")
-  (c-name "gda_value_to_xml")
-  (return-type "xmlNodePtr")
+(define-method change_database
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_change_database")
+  (return-type "gboolean")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("const-gchar*" "name")
+  )
 )
 
-(define-function gda_money_get_type
-  (c-name "gda_money_get_type")
-  (return-type "GType")
+(define-method get_specs
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_get_specs")
+  (return-type "gchar*")
+  (parameters
+    '("GdaClientSpecsType" "action_type")
+  )
 )
 
-(define-method copy
-  (of-object "GdaMoney")
-  (c-name "gda_money_copy")
-  (return-type "GdaMoney*")
+(define-method perform_action_params
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_perform_action_params")
+  (return-type "gboolean")
+  (parameters
+    '("GdaParameterList*" "params")
+    '("GdaClientSpecsType" "action_type")
+    '("GError**" "error")
+  )
 )
 
-(define-method free
-  (of-object "GdaMoney")
-  (c-name "gda_money_free")
-  (return-type "none")
+(define-method create_database_cnc
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_create_database_cnc")
+  (return-type "gboolean")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("const-gchar*" "name")
+  )
 )
 
-(define-function gda_numeric_get_type
-  (c-name "gda_numeric_get_type")
-  (return-type "GType")
+(define-method drop_database_cnc
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_drop_database_cnc")
+  (return-type "gboolean")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("const-gchar*" "name")
+  )
 )
 
-(define-method copy
-  (of-object "GdaNumeric")
-  (c-name "gda_numeric_copy")
-  (return-type "GdaNumeric*")
+(define-method create_table
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_create_table")
+  (return-type "gboolean")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("const-gchar*" "table_name")
+    '("const-GList*" "attributes_list")
+    '("const-GList*" "index_list")
+  )
 )
 
-(define-method free
-  (of-object "GdaNumeric")
-  (c-name "gda_numeric_free")
-  (return-type "none")
+(define-method drop_table
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_drop_table")
+  (return-type "gboolean")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("const-gchar*" "table_name")
+  )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xml-connection.h
-
-(define-function gda_xml_connection_get_type
-  (c-name "gda_xml_connection_get_type")
-  (return-type "GType")
+(define-method create_index
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_create_index")
+  (return-type "gboolean")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("const-GdaDataModelIndex*" "index")
+    '("const-gchar*" "table_name")
+  )
 )
 
-(define-function gda_xml_connection_new
-  (c-name "gda_xml_connection_new")
-  (is-constructor-of "GdaXmlConnection")
-  (return-type "GdaXmlConnection*")
+(define-method drop_index
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_drop_index")
+  (return-type "gboolean")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("const-gchar*" "index_name")
+    '("gboolean" "primary_key")
+    '("const-gchar*" "table_name")
+  )
 )
 
-(define-function gda_xml_connection_new_from_file
-  (c-name "gda_xml_connection_new_from_file")
-  (return-type "GdaXmlConnection*")
+(define-method execute_command
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_execute_command")
+  (return-type "GList*")
   (parameters
-    '("const-gchar*" "filename")
+    '("GdaConnection*" "cnc")
+    '("GdaCommand*" "cmd")
+    '("GdaParameterList*" "params")
   )
 )
 
-(define-function gda_xml_connection_new_from_string
-  (c-name "gda_xml_connection_new_from_string")
-  (return-type "GdaXmlConnection*")
+(define-method get_last_insert_id
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_get_last_insert_id")
+  (return-type "gchar*")
   (parameters
-    '("const-gchar*" "string")
+    '("GdaConnection*" "cnc")
+    '("GdaDataModel*" "recset")
   )
 )
 
-(define-method set_from_file
-  (of-object "GdaXmlConnection")
-  (c-name "gda_xml_connection_set_from_file")
+(define-method begin_transaction
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_begin_transaction")
   (return-type "gboolean")
   (parameters
-    '("const-gchar*" "filename")
+    '("GdaConnection*" "cnc")
+    '("GdaTransaction*" "xaction")
   )
 )
 
-(define-method set_from_string
-  (of-object "GdaXmlConnection")
-  (c-name "gda_xml_connection_set_from_string")
+(define-method commit_transaction
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_commit_transaction")
   (return-type "gboolean")
   (parameters
-    '("const-gchar*" "string")
+    '("GdaConnection*" "cnc")
+    '("GdaTransaction*" "xaction")
   )
 )
 
-(define-method get_dsn
-  (of-object "GdaXmlConnection")
-  (c-name "gda_xml_connection_get_dsn")
-  (return-type "const-gchar*")
+(define-method rollback_transaction
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_rollback_transaction")
+  (return-type "gboolean")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("GdaTransaction*" "xaction")
+  )
 )
 
-(define-method set_dsn
-  (of-object "GdaXmlConnection")
-  (c-name "gda_xml_connection_set_dsn")
-  (return-type "none")
+(define-method supports
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_supports")
+  (return-type "gboolean")
   (parameters
-    '("const-gchar*" "dsn")
+    '("GdaConnection*" "cnc")
+    '("GdaConnectionFeature" "feature")
   )
 )
 
-(define-method get_username
-  (of-object "GdaXmlConnection")
-  (c-name "gda_xml_connection_get_username")
-  (return-type "const-gchar*")
+(define-method get_schema
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_get_schema")
+  (return-type "GdaDataModel*")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("GdaConnectionSchema" "schema")
+    '("GdaParameterList*" "params")
+  )
 )
 
-(define-method set_username
-  (of-object "GdaXmlConnection")
-  (c-name "gda_xml_connection_set_username")
-  (return-type "none")
+(define-method create_blob
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_create_blob")
+  (return-type "GdaBlob*")
   (parameters
-    '("const-gchar*" "username")
+    '("GdaConnection*" "cnc")
   )
 )
 
-(define-method get_password
-  (of-object "GdaXmlConnection")
-  (c-name "gda_xml_connection_get_password")
-  (return-type "const-gchar*")
+(define-method fetch_blob_by_id
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_fetch_blob_by_id")
+  (return-type "GdaBlob*")
+  (parameters
+    '("GdaConnection*" "cnc")
+    '("const-gchar*" "sql_id")
+  )
 )
 
-(define-method set_password
-  (of-object "GdaXmlConnection")
-  (c-name "gda_xml_connection_set_password")
-  (return-type "none")
+(define-method value_to_sql_string
+  (of-object "GdaServerProvider")
+  (c-name "gda_server_provider_value_to_sql_string")
+  (return-type "gchar*")
   (parameters
-    '("const-gchar*" "password")
+    '("GdaConnection*" "cnc")
+    '("GdaValue*" "from")
   )
 )
 
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xml-database.h
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-threader.h
 
-(define-function gda_xml_database_get_type
-  (c-name "gda_xml_database_get_type")
+(define-function gda_threader_get_type
+  (c-name "gda_threader_get_type")
   (return-type "GType")
 )
 
-(define-function gda_xml_database_new
-  (c-name "gda_xml_database_new")
-  (is-constructor-of "GdaXmlDatabase")
-  (return-type "GdaXmlDatabase*")
+(define-function gda_threader_new
+  (c-name "gda_threader_new")
+  (is-constructor-of "GdaThreader")
+  (return-type "GObject*")
 )
 
-(define-function gda_xml_database_new_from_uri
-  (c-name "gda_xml_database_new_from_uri")
-  (return-type "GdaXmlDatabase*")
+(define-method start_thread
+  (of-object "GdaThreader")
+  (c-name "gda_threader_start_thread")
+  (return-type "guint")
   (parameters
-    '("const-gchar*" "uri")
+    '("GThreadFunc" "func")
+    '("gpointer" "func_arg")
+    '("GdaThreaderFunc" "ok_callback")
+    '("GdaThreaderFunc" "cancel_callback")
+    '("GError**" "error")
   )
 )
 
-(define-method get_name
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_get_name")
-  (return-type "const-gchar*")
+(define-method cancel
+  (of-object "GdaThreader")
+  (c-name "gda_threader_cancel")
+  (return-type "none")
+  (parameters
+    '("guint" "job_id")
+  )
 )
 
-(define-method set_name
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_set_name")
-  (return-type "none")
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-transaction.h
+
+(define-function gda_transaction_get_type
+  (c-name "gda_transaction_get_type")
+  (return-type "GType")
+)
+
+(define-function gda_transaction_new
+  (c-name "gda_transaction_new")
+  (is-constructor-of "GdaTransaction")
+  (return-type "GdaTransaction*")
   (parameters
     '("const-gchar*" "name")
   )
 )
 
-(define-method get_user_version
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_get_user_version")
-  (return-type "const-gchar*")
+(define-method get_isolation_level
+  (of-object "GdaTransaction")
+  (c-name "gda_transaction_get_isolation_level")
+  (return-type "GdaTransactionIsolation")
 )
 
-(define-method set_user_version
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_set_user_version")
+(define-method set_isolation_level
+  (of-object "GdaTransaction")
+  (c-name "gda_transaction_set_isolation_level")
   (return-type "none")
   (parameters
-    '("const-gchar*" "user_version")
+    '("GdaTransactionIsolation" "level")
   )
 )
 
-(define-method get_version
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_get_version")
-  (return-type "const-gchar*")
-)
-
-(define-method get_uri
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_get_uri")
+(define-method get_name
+  (of-object "GdaTransaction")
+  (c-name "gda_transaction_get_name")
   (return-type "const-gchar*")
 )
 
-(define-method set_uri
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_set_uri")
+(define-method set_name
+  (of-object "GdaTransaction")
+  (c-name "gda_transaction_set_name")
   (return-type "none")
   (parameters
-    '("const-gchar*" "uri")
+    '("const-gchar*" "name")
   )
 )
 
-(define-method changed
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_changed")
-  (return-type "none")
-)
 
-(define-method reload
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_reload")
-  (return-type "none")
-)
 
-(define-method save
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_save")
-  (return-type "gboolean")
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-util.h
+
+(define-function gda_type_to_string
+  (c-name "gda_type_to_string")
+  (return-type "const-gchar*")
   (parameters
-    '("const-gchar*" "uri")
+    '("GdaValueType" "type")
   )
 )
 
-(define-method to_string
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_to_string")
-  (return-type "gchar*")
+(define-function gda_type_from_string
+  (c-name "gda_type_from_string")
+  (return-type "GdaValueType")
+  (parameters
+    '("const-gchar*" "str")
+  )
 )
 
-(define-method get_tables
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_get_tables")
+(define-function gda_string_hash_to_list
+  (c-name "gda_string_hash_to_list")
   (return-type "GList*")
+  (parameters
+    '("GHashTable*" "hash_table")
+  )
 )
 
-(define-function gda_xml_database_free_table_list
-  (c-name "gda_xml_database_free_table_list")
-  (return-type "none")
+(define-function gda_sql_replace_placeholders
+  (c-name "gda_sql_replace_placeholders")
+  (return-type "gchar*")
   (parameters
-    '("GList*" "list")
+    '("const-gchar*" "sql")
+    '("GdaParameterList*" "params")
   )
 )
 
-(define-method find_table
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_find_table")
-  (return-type "GdaTable*")
+(define-function gda_file_load
+  (c-name "gda_file_load")
+  (return-type "gchar*")
   (parameters
-    '("const-gchar*" "name")
+    '("const-gchar*" "filename")
   )
 )
 
-(define-method new_table
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_new_table")
-  (return-type "GdaTable*")
+(define-function gda_file_save
+  (c-name "gda_file_save")
+  (return-type "gboolean")
   (parameters
-    '("const-gchar*" "name")
+    '("const-gchar*" "filename")
+    '("const-gchar*" "buffer")
+    '("gint" "len")
   )
 )
 
-(define-method new_table_from_model
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_new_table_from_model")
-  (return-type "GdaTable*")
+(define-function gda_provider_get_schema_nb_columns
+  (c-name "gda_provider_get_schema_nb_columns")
+  (return-type "gint")
   (parameters
-    '("const-gchar*" "name")
-    '("const-GdaDataModel*" "model")
-    '("gboolean" "add_data")
+    '("GdaConnectionSchema" "schema")
   )
 )
 
-(define-method new_table_from_node
-  (of-object "GdaXmlDatabase")
-  (c-name "gda_xml_database_new_table_from_node")
-  (return-type "GdaTable*")
+(define-function gda_provider_init_schema_model
+  (c-name "gda_provider_init_schema_model")
+  (return-type "gboolean")
   (parameters
-    '("xmlNodePtr" "node")
+    '("GdaDataModel*" "model")
+    '("GdaConnectionSchema" "schema")
   )
 )
 
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xml-document.h
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/gda-value.h
 
-(define-function gda_xml_document_get_type
-  (c-name "gda_xml_document_get_type")
-  (return-type "GType")
+(define-method get_type
+  (of-object "GdaValue")
+  (c-name "gda_value_get_type")
+  (return-type "GdaValueType")
 )
 
-(define-function gda_xml_document_new
-  (c-name "gda_xml_document_new")
-  (is-constructor-of "GdaXmlDocument")
-  (return-type "GdaXmlDocument*")
+(define-function gda_value_convert_gdatype_to_gtype
+  (c-name "gda_value_convert_gdatype_to_gtype")
+  (return-type "GType")
   (parameters
-    '("const-gchar*" "root_doc")
+    '("GdaValueType" "type")
   )
 )
 
-(define-method construct
-  (of-object "GdaXmlDocument")
-  (c-name "gda_xml_document_construct")
-  (return-type "none")
+(define-function gda_value_convert_gtype_to_gdatype
+  (c-name "gda_value_convert_gtype_to_gdatype")
+  (return-type "GdaValueType")
   (parameters
-    '("const-gchar*" "root_doc")
+    '("GType" "type")
   )
 )
 
-(define-method get_compress_mode
-  (of-object "GdaXmlDocument")
-  (c-name "gda_xml_document_get_compress_mode")
-  (return-type "gint")
+(define-function gda_value_new_null
+  (c-name "gda_value_new_null")
+  (return-type "GdaValue*")
 )
 
-(define-method set_compress_mode
-  (of-object "GdaXmlDocument")
-  (c-name "gda_xml_document_set_compress_mode")
-  (return-type "none")
+(define-function gda_value_new_bigint
+  (c-name "gda_value_new_bigint")
+  (return-type "GdaValue*")
   (parameters
-    '("gint" "mode")
+    '("gint64" "val")
   )
 )
 
-(define-method to_file
-  (of-object "GdaXmlDocument")
-  (c-name "gda_xml_document_to_file")
-  (return-type "gboolean")
+(define-function gda_value_new_biguint
+  (c-name "gda_value_new_biguint")
+  (return-type "GdaValue*")
   (parameters
-    '("const-gchar*" "uri")
+    '("guint64" "val")
   )
 )
 
-(define-method stringify
-  (of-object "GdaXmlDocument")
-  (c-name "gda_xml_document_stringify")
-  (return-type "gchar*")
+(define-function gda_value_new_binary
+  (c-name "gda_value_new_binary")
+  (return-type "GdaValue*")
+  (parameters
+    '("guchar*" "val")
+    '("glong" "size")
+  )
 )
 
+(define-function gda_value_new_blob
+  (c-name "gda_value_new_blob")
+  (return-type "GdaValue*")
+  (parameters
+    '("const-GdaBlob*" "val")
+  )
+)
 
+(define-function gda_value_new_boolean
+  (c-name "gda_value_new_boolean")
+  (return-type "GdaValue*")
+  (parameters
+    '("gboolean" "val")
+  )
+)
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-atom.h
-
-(define-function gda_xql_atom_get_type
-  (c-name "gda_xql_atom_get_type")
-  (return-type "GType")
+(define-function gda_value_new_date
+  (c-name "gda_value_new_date")
+  (return-type "GdaValue*")
+  (parameters
+    '("const-GdaDate*" "val")
+  )
 )
 
-(define-function gda_xql_atom_new
-  (c-name "gda_xql_atom_new")
-  (is-constructor-of "GdaXqlAtom")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_double
+  (c-name "gda_value_new_double")
+  (return-type "GdaValue*")
   (parameters
-    '("gchar*" "tag")
+    '("gdouble" "val")
   )
 )
 
+(define-function gda_value_new_geometric_point
+  (c-name "gda_value_new_geometric_point")
+  (return-type "GdaValue*")
+  (parameters
+    '("const-GdaGeometricPoint*" "val")
+  )
+)
 
+(define-function gda_value_new_gobject
+  (c-name "gda_value_new_gobject")
+  (return-type "GdaValue*")
+  (parameters
+    '("const-GObject*" "val")
+  )
+)
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-bin.h
+(define-function gda_value_new_integer
+  (c-name "gda_value_new_integer")
+  (return-type "GdaValue*")
+  (parameters
+    '("gint" "val")
+  )
+)
 
-(define-function gda_xql_bin_get_type
-  (c-name "gda_xql_bin_get_type")
-  (return-type "GType")
+(define-function gda_value_new_list
+  (c-name "gda_value_new_list")
+  (return-type "GdaValue*")
+  (parameters
+    '("const-GdaValueList*" "val")
+  )
 )
 
-(define-function gda_xql_bin_new
-  (c-name "gda_xql_bin_new")
-  (is-constructor-of "GdaXqlBin")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_money
+  (c-name "gda_value_new_money")
+  (return-type "GdaValue*")
   (parameters
-    '("gchar*" "tag")
-    '("gchar*" "sqlfmt")
-    '("gchar*" "sqlop")
+    '("const-GdaMoney*" "val")
   )
 )
 
-(define-function gda_xql_bin_new_with_data
-  (c-name "gda_xql_bin_new_with_data")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_numeric
+  (c-name "gda_value_new_numeric")
+  (return-type "GdaValue*")
   (parameters
-    '("gchar*" "tag")
-    '("gchar*" "sqlfmt")
-    '("gchar*" "sqlop")
-    '("GdaXqlItem*" "child")
+    '("const-GdaNumeric*" "val")
   )
 )
 
-(define-method get_child
-  (of-object "GdaXqlBin")
-  (c-name "gda_xql_bin_get_child")
-  (return-type "GdaXqlItem*")
-)
-
-(define-method set_child
-  (of-object "GdaXqlBin")
-  (c-name "gda_xql_bin_set_child")
-  (return-type "none")
+(define-function gda_value_new_single
+  (c-name "gda_value_new_single")
+  (return-type "GdaValue*")
   (parameters
-    '("GdaXqlItem*" "item")
+    '("gfloat" "val")
   )
 )
 
-(define-function gda_xql_bin_new_union
-  (c-name "gda_xql_bin_new_union")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_bin_new_unionall
-  (c-name "gda_xql_bin_new_unionall")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_bin_new_intersect
-  (c-name "gda_xql_bin_new_intersect")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_bin_new_minus
-  (c-name "gda_xql_bin_new_minus")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_bin_new_where
-  (c-name "gda_xql_bin_new_where")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_bin_new_where_with_data
-  (c-name "gda_xql_bin_new_where_with_data")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_smallint
+  (c-name "gda_value_new_smallint")
+  (return-type "GdaValue*")
   (parameters
-    '("GdaXqlItem*" "data")
+    '("gshort" "val")
   )
 )
 
-(define-function gda_xql_bin_new_having
-  (c-name "gda_xql_bin_new_having")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_bin_new_having_with_data
-  (c-name "gda_xql_bin_new_having_with_data")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_smalluint
+  (c-name "gda_value_new_smalluint")
+  (return-type "GdaValue*")
   (parameters
-    '("GdaXqlItem*" "data")
+    '("gushort" "val")
   )
 )
 
-(define-function gda_xql_bin_new_on
-  (c-name "gda_xql_bin_new_on")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_string
+  (c-name "gda_value_new_string")
+  (return-type "GdaValue*")
+  (parameters
+    '("const-gchar*" "val")
+  )
 )
 
-(define-function gda_xql_bin_new_not
-  (c-name "gda_xql_bin_new_not")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_time
+  (c-name "gda_value_new_time")
+  (return-type "GdaValue*")
+  (parameters
+    '("const-GdaTime*" "val")
+  )
 )
 
-(define-function gda_xql_bin_new_not_with_data
-  (c-name "gda_xql_bin_new_not_with_data")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_timestamp
+  (c-name "gda_value_new_timestamp")
+  (return-type "GdaValue*")
   (parameters
-    '("GdaXqlItem*" "data")
+    '("const-GdaTimestamp*" "val")
   )
 )
 
-(define-function gda_xql_bin_new_exists
-  (c-name "gda_xql_bin_new_exists")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_timestamp_from_timet
+  (c-name "gda_value_new_timestamp_from_timet")
+  (return-type "GdaValue*")
+  (parameters
+    '("time_t" "val")
+  )
 )
 
-(define-function gda_xql_bin_new_null
-  (c-name "gda_xql_bin_new_null")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_tinyint
+  (c-name "gda_value_new_tinyint")
+  (return-type "GdaValue*")
+  (parameters
+    '("gchar" "val")
+  )
 )
 
-(define-function gda_xql_bin_new_null_with_data
-  (c-name "gda_xql_bin_new_null_with_data")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_tinyuint
+  (c-name "gda_value_new_tinyuint")
+  (return-type "GdaValue*")
   (parameters
-    '("GdaXqlItem*" "data")
+    '("guchar" "val")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-column.h
-
-(define-function gda_xql_column_get_type
-  (c-name "gda_xql_column_get_type")
-  (return-type "GType")
+(define-function gda_value_new_uinteger
+  (c-name "gda_value_new_uinteger")
+  (return-type "GdaValue*")
+  (parameters
+    '("guint" "val")
+  )
 )
 
-(define-function gda_xql_column_new
-  (c-name "gda_xql_column_new")
-  (is-constructor-of "GdaXqlColumn")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_gdatype
+  (c-name "gda_value_new_gdatype")
+  (return-type "GdaValue*")
+  (parameters
+    '("GdaValueType" "val")
+  )
 )
 
-(define-function gda_xql_column_new_with_data
-  (c-name "gda_xql_column_new_with_data")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_new_from_string
+  (c-name "gda_value_new_from_string")
+  (return-type "GdaValue*")
   (parameters
-    '("gint" "num")
-    '("gboolean" "asc")
+    '("const-gchar*" "as_string")
+    '("GdaValueType" "type")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-const.h
-
-(define-function gda_xql_const_get_type
-  (c-name "gda_xql_const_get_type")
-  (return-type "GType")
+(define-function gda_value_new_from_xml
+  (c-name "gda_value_new_from_xml")
+  (return-type "GdaValue*")
+  (parameters
+    '("const-xmlNodePtr" "node")
+  )
 )
 
-(define-function gda_xql_const_new
-  (c-name "gda_xql_const_new")
-  (is-constructor-of "GdaXqlConst")
-  (return-type "GdaXqlItem*")
+(define-method free
+  (of-object "GdaValue")
+  (c-name "gda_value_free")
+  (return-type "none")
 )
 
-(define-function gda_xql_const_new_with_data
-  (c-name "gda_xql_const_new_with_data")
-  (return-type "GdaXqlItem*")
+(define-method reset_with_type
+  (of-object "GdaValue")
+  (c-name "gda_value_reset_with_type")
+  (return-type "none")
   (parameters
-    '("gchar*" "value")
-    '("gchar*" "alias")
-    '("gchar*" "type")
-    '("gchar*" "null")
+    '("GdaValueType" "type")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-delete.h
-
-(define-function gda_xql_delete_get_type
-  (c-name "gda_xql_delete_get_type")
-  (return-type "GType")
+(define-method is_null
+  (of-object "GdaValue")
+  (c-name "gda_value_is_null")
+  (return-type "gboolean")
 )
 
-(define-function gda_xql_delete_new
-  (c-name "gda_xql_delete_new")
-  (is-constructor-of "GdaXqlDelete")
-  (return-type "GdaXqlItem*")
+(define-method is_number
+  (of-object "GdaValue")
+  (c-name "gda_value_is_number")
+  (return-type "gboolean")
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-dml.h
-
-(define-function gda_xql_dml_get_type
-  (c-name "gda_xql_dml_get_type")
-  (return-type "GType")
+(define-method copy
+  (of-object "GdaValue")
+  (c-name "gda_value_copy")
+  (return-type "GdaValue*")
 )
 
-(define-method add_target_from_text
-  (of-object "GdaXqlDml")
-  (c-name "gda_xql_dml_add_target_from_text")
-  (return-type "gchar*")
-  (parameters
-    '("gchar*" "name")
-    '("GdaXqlItem*" "join")
-  )
+(define-method get_bigint
+  (of-object "GdaValue")
+  (c-name "gda_value_get_bigint")
+  (return-type "gint64")
 )
 
-(define-method add_field_from_text
-  (of-object "GdaXqlDml")
-  (c-name "gda_xql_dml_add_field_from_text")
-  (return-type "GdaXqlItem*")
+(define-method set_bigint
+  (of-object "GdaValue")
+  (c-name "gda_value_set_bigint")
+  (return-type "none")
   (parameters
-    '("gchar*" "id")
-    '("gchar*" "name")
-    '("gchar*" "alias")
-    '("gboolean" "group")
+    '("gint64" "val")
   )
 )
 
-(define-method add_const_from_text
-  (of-object "GdaXqlDml")
-  (c-name "gda_xql_dml_add_const_from_text")
-  (return-type "GdaXqlItem*")
-  (parameters
-    '("gchar*" "value")
-    '("gchar*" "type")
-    '("gboolean" "null")
-  )
+(define-method get_biguint
+  (of-object "GdaValue")
+  (c-name "gda_value_get_biguint")
+  (return-type "guint64")
 )
 
-(define-method add_func
-  (of-object "GdaXqlDml")
-  (c-name "gda_xql_dml_add_func")
+(define-method set_biguint
+  (of-object "GdaValue")
+  (c-name "gda_value_set_biguint")
   (return-type "none")
   (parameters
-    '("GdaXqlItem*" "item")
+    '("guint64" "val")
   )
 )
 
-(define-method add_query
-  (of-object "GdaXqlDml")
-  (c-name "gda_xql_dml_add_query")
-  (return-type "none")
-  (parameters
-    '("GdaXqlItem*" "item")
-  )
+(define-method get_binary
+  (of-object "GdaValue")
+  (c-name "gda_value_get_binary")
+  (return-type "const-GdaBinary*")
 )
 
-(define-method add_row_condition
-  (of-object "GdaXqlDml")
-  (c-name "gda_xql_dml_add_row_condition")
+(define-method set_binary
+  (of-object "GdaValue")
+  (c-name "gda_value_set_binary")
   (return-type "none")
   (parameters
-    '("GdaXqlItem*" "cond")
-    '("gchar*" "type")
+    '("const-GdaBinary*" "binary")
   )
 )
 
-(define-method add_group_condition
-  (of-object "GdaXqlDml")
-  (c-name "gda_xql_dml_add_group_condition")
-  (return-type "none")
-  (parameters
-    '("GdaXqlItem*" "cond")
-    '("gchar*" "type")
-  )
+(define-method get_blob
+  (of-object "GdaValue")
+  (c-name "gda_value_get_blob")
+  (return-type "const-GdaBlob*")
 )
 
-(define-method add_order
-  (of-object "GdaXqlDml")
-  (c-name "gda_xql_dml_add_order")
+(define-method set_blob
+  (of-object "GdaValue")
+  (c-name "gda_value_set_blob")
   (return-type "none")
   (parameters
-    '("gint" "column")
-    '("gboolean" "asc")
+    '("const-GdaBlob*" "val")
   )
 )
 
-(define-method add_set
-  (of-object "GdaXqlDml")
-  (c-name "gda_xql_dml_add_set")
+(define-method get_boolean
+  (of-object "GdaValue")
+  (c-name "gda_value_get_boolean")
+  (return-type "gboolean")
+)
+
+(define-method set_boolean
+  (of-object "GdaValue")
+  (c-name "gda_value_set_boolean")
   (return-type "none")
   (parameters
-    '("GdaXqlItem*" "item")
+    '("gboolean" "val")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-dual.h
-
-(define-function gda_xql_dual_get_type
-  (c-name "gda_xql_dual_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_xql_dual_new
-  (c-name "gda_xql_dual_new")
-  (is-constructor-of "GdaXqlDual")
-  (return-type "GdaXqlItem*")
-  (parameters
-    '("gchar*" "tag")
-    '("gchar*" "sqlfmt")
-    '("gchar*" "sqlop")
-  )
+(define-method get_date
+  (of-object "GdaValue")
+  (c-name "gda_value_get_date")
+  (return-type "const-GdaDate*")
 )
 
-(define-function gda_xql_dual_new_with_data
-  (c-name "gda_xql_dual_new_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_date
+  (of-object "GdaValue")
+  (c-name "gda_value_set_date")
+  (return-type "none")
   (parameters
-    '("gchar*" "tag")
-    '("gchar*" "sqlfmt")
-    '("gchar*" "sqlop")
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("const-GdaDate*" "val")
   )
 )
 
-(define-method get_left
-  (of-object "GdaXqlDual")
-  (c-name "gda_xql_dual_get_left")
-  (return-type "GdaXqlItem*")
-)
-
-(define-method get_right
-  (of-object "GdaXqlDual")
-  (c-name "gda_xql_dual_get_right")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_dual_new_eq
-  (c-name "gda_xql_dual_new_eq")
-  (return-type "GdaXqlItem*")
+(define-method get_double
+  (of-object "GdaValue")
+  (c-name "gda_value_get_double")
+  (return-type "gdouble")
 )
 
-(define-function gda_xql_dual_new_eq_with_data
-  (c-name "gda_xql_dual_new_eq_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_double
+  (of-object "GdaValue")
+  (c-name "gda_value_set_double")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("gdouble" "val")
   )
 )
 
-(define-function gda_xql_dual_new_ne
-  (c-name "gda_xql_dual_new_ne")
-  (return-type "GdaXqlItem*")
+(define-method get_geometric_point
+  (of-object "GdaValue")
+  (c-name "gda_value_get_geometric_point")
+  (return-type "const-GdaGeometricPoint*")
 )
 
-(define-function gda_xql_dual_new_ne_with_data
-  (c-name "gda_xql_dual_new_ne_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_geometric_point
+  (of-object "GdaValue")
+  (c-name "gda_value_set_geometric_point")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("const-GdaGeometricPoint*" "val")
   )
 )
 
-(define-function gda_xql_dual_new_lt
-  (c-name "gda_xql_dual_new_lt")
-  (return-type "GdaXqlItem*")
+(define-method get_gobject
+  (of-object "GdaValue")
+  (c-name "gda_value_get_gobject")
+  (return-type "const-GObject*")
 )
 
-(define-function gda_xql_dual_new_lt_with_data
-  (c-name "gda_xql_dual_new_lt_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_gobject
+  (of-object "GdaValue")
+  (c-name "gda_value_set_gobject")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("const-GObject*" "val")
   )
 )
 
-(define-function gda_xql_dual_new_le
-  (c-name "gda_xql_dual_new_le")
-  (return-type "GdaXqlItem*")
+(define-method get_integer
+  (of-object "GdaValue")
+  (c-name "gda_value_get_integer")
+  (return-type "gint")
 )
 
-(define-function gda_xql_dual_new_le_with_data
-  (c-name "gda_xql_dual_new_le_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_integer
+  (of-object "GdaValue")
+  (c-name "gda_value_set_integer")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("gint" "val")
   )
 )
 
-(define-function gda_xql_dual_new_gt
-  (c-name "gda_xql_dual_new_gt")
-  (return-type "GdaXqlItem*")
+(define-method get_list
+  (of-object "GdaValue")
+  (c-name "gda_value_get_list")
+  (return-type "const-GdaValueList*")
 )
 
-(define-function gda_xql_dual_new_gt_with_data
-  (c-name "gda_xql_dual_new_gt_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_list
+  (of-object "GdaValue")
+  (c-name "gda_value_set_list")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("const-GdaValueList*" "val")
   )
 )
 
-(define-function gda_xql_dual_new_ge
-  (c-name "gda_xql_dual_new_ge")
-  (return-type "GdaXqlItem*")
+(define-method set_null
+  (of-object "GdaValue")
+  (c-name "gda_value_set_null")
+  (return-type "none")
+)
+
+(define-method get_money
+  (of-object "GdaValue")
+  (c-name "gda_value_get_money")
+  (return-type "const-GdaMoney*")
 )
 
-(define-function gda_xql_dual_new_ge_with_data
-  (c-name "gda_xql_dual_new_ge_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_money
+  (of-object "GdaValue")
+  (c-name "gda_value_set_money")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("const-GdaMoney*" "val")
   )
 )
 
-(define-function gda_xql_dual_new_like
-  (c-name "gda_xql_dual_new_like")
-  (return-type "GdaXqlItem*")
+(define-method get_numeric
+  (of-object "GdaValue")
+  (c-name "gda_value_get_numeric")
+  (return-type "const-GdaNumeric*")
 )
 
-(define-function gda_xql_dual_new_like_with_data
-  (c-name "gda_xql_dual_new_like_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_numeric
+  (of-object "GdaValue")
+  (c-name "gda_value_set_numeric")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("const-GdaNumeric*" "val")
   )
 )
 
-(define-function gda_xql_dual_new_in
-  (c-name "gda_xql_dual_new_in")
-  (return-type "GdaXqlItem*")
+(define-method get_single
+  (of-object "GdaValue")
+  (c-name "gda_value_get_single")
+  (return-type "gfloat")
 )
 
-(define-function gda_xql_dual_new_in_with_data
-  (c-name "gda_xql_dual_new_in_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_single
+  (of-object "GdaValue")
+  (c-name "gda_value_set_single")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("gfloat" "val")
   )
 )
 
-(define-function gda_xql_dual_new_set
-  (c-name "gda_xql_dual_new_set")
-  (return-type "GdaXqlItem*")
+(define-method get_smallint
+  (of-object "GdaValue")
+  (c-name "gda_value_get_smallint")
+  (return-type "gshort")
 )
 
-(define-function gda_xql_dual_new_set_with_data
-  (c-name "gda_xql_dual_new_set_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_smallint
+  (of-object "GdaValue")
+  (c-name "gda_value_set_smallint")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "left")
-    '("GdaXqlItem*" "right")
+    '("gshort" "val")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-field.h
-
-(define-function gda_xql_field_get_type
-  (c-name "gda_xql_field_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_xql_field_new
-  (c-name "gda_xql_field_new")
-  (is-constructor-of "GdaXqlField")
-  (return-type "GdaXqlItem*")
+(define-method get_smalluint
+  (of-object "GdaValue")
+  (c-name "gda_value_get_smalluint")
+  (return-type "gushort")
 )
 
-(define-function gda_xql_field_new_with_data
-  (c-name "gda_xql_field_new_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_smalluint
+  (of-object "GdaValue")
+  (c-name "gda_value_set_smalluint")
+  (return-type "none")
   (parameters
-    '("gchar*" "source")
-    '("gchar*" "name")
-    '("gchar*" "alias")
+    '("gushort" "val")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-func.h
-
-(define-function gda_xql_func_get_type
-  (c-name "gda_xql_func_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_xql_func_new
-  (c-name "gda_xql_func_new")
-  (is-constructor-of "GdaXqlFunc")
-  (return-type "GdaXqlItem*")
+(define-method get_string
+  (of-object "GdaValue")
+  (c-name "gda_value_get_string")
+  (return-type "const-gchar*")
 )
 
-(define-function gda_xql_func_new_with_data
-  (c-name "gda_xql_func_new_with_data")
-  (return-type "GdaXqlItem*")
+(define-method set_string
+  (of-object "GdaValue")
+  (c-name "gda_value_set_string")
+  (return-type "none")
   (parameters
-    '("gchar*" "name")
-    '("gchar*" "alias")
-    '("gchar*" "aggregate")
+    '("const-gchar*" "val")
   )
 )
 
-(define-method add_const_from_text
-  (of-object "GdaXqlFunc")
-  (c-name "gda_xql_func_add_const_from_text")
-  (return-type "none")
-  (parameters
-    '("gchar*" "value")
-    '("gchar*" "type")
-    '("gchar*" "null")
-  )
+(define-method get_time
+  (of-object "GdaValue")
+  (c-name "gda_value_get_time")
+  (return-type "const-GdaTime*")
 )
 
-(define-method add_field_from_text
-  (of-object "GdaXqlFunc")
-  (c-name "gda_xql_func_add_field_from_text")
+(define-method set_time
+  (of-object "GdaValue")
+  (c-name "gda_value_set_time")
   (return-type "none")
   (parameters
-    '("gchar*" "id")
-    '("gchar*" "name")
-    '("gchar*" "alias")
+    '("const-GdaTime*" "val")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-insert.h
-
-(define-function gda_xql_insert_get_type
-  (c-name "gda_xql_insert_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_xql_insert_new
-  (c-name "gda_xql_insert_new")
-  (is-constructor-of "GdaXqlInsert")
-  (return-type "GdaXqlItem*")
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-item.h
-
-(define-function gda_xql_item_get_type
-  (c-name "gda_xql_item_get_type")
-  (return-type "GType")
+(define-method get_timestamp
+  (of-object "GdaValue")
+  (c-name "gda_value_get_timestamp")
+  (return-type "const-GdaTimestamp*")
 )
 
-(define-method set_attrib
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_set_attrib")
+(define-method set_timestamp
+  (of-object "GdaValue")
+  (c-name "gda_value_set_timestamp")
   (return-type "none")
   (parameters
-    '("gchar*" "attrib")
-    '("gchar*" "value")
+    '("const-GdaTimestamp*" "val")
   )
 )
 
-(define-method get_parent
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_get_parent")
-  (return-type "GdaXqlItem*")
+(define-method get_tinyint
+  (of-object "GdaValue")
+  (c-name "gda_value_get_tinyint")
+  (return-type "gchar")
 )
 
-(define-method set_parent
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_set_parent")
+(define-method set_tinyint
+  (of-object "GdaValue")
+  (c-name "gda_value_set_tinyint")
   (return-type "none")
   (parameters
-    '("GdaXqlItem*" "parent")
+    '("gchar" "val")
   )
 )
 
-(define-method get_attrib
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_get_attrib")
-  (return-type "gchar*")
-  (parameters
-    '("gchar*" "attrib")
-  )
+(define-method get_tinyuint
+  (of-object "GdaValue")
+  (c-name "gda_value_get_tinyuint")
+  (return-type "guchar")
 )
 
-(define-method to_dom
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_to_dom")
-  (return-type "xmlNode*")
+(define-method set_tinyuint
+  (of-object "GdaValue")
+  (c-name "gda_value_set_tinyuint")
+  (return-type "none")
   (parameters
-    '("xmlNode*" "parent")
+    '("guchar" "val")
   )
 )
 
-(define-method add
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_add")
+(define-method get_uinteger
+  (of-object "GdaValue")
+  (c-name "gda_value_get_uinteger")
+  (return-type "guint")
+)
+
+(define-method set_uinteger
+  (of-object "GdaValue")
+  (c-name "gda_value_set_uinteger")
   (return-type "none")
   (parameters
-    '("GdaXqlItem*" "child")
+    '("guint" "val")
   )
 )
 
-(define-method set_tag
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_set_tag")
+(define-function gda_value_set_gdatype
+  (c-name "gda_value_set_gdatype")
   (return-type "none")
   (parameters
-    '("gchar*" "tag")
+    '("GValue*" "value")
+    '("GdaValueType" "val")
   )
 )
 
-(define-method get_tag
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_get_tag")
-  (return-type "gchar*")
-)
-
-(define-method find_root
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_find_root")
-  (return-type "GdaXqlItem*")
-)
-
-(define-method find_id
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_find_id")
-  (return-type "GdaXqlItem*")
+(define-function gda_value_get_gdatype
+  (c-name "gda_value_get_gdatype")
+  (return-type "GdaValueType")
   (parameters
-    '("gchar*" "id")
+    '("GValue*" "value")
   )
 )
 
-(define-method find_ref
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_find_ref")
-  (return-type "GdaXqlItem*")
+(define-method set_from_string
+  (of-object "GdaValue")
+  (c-name "gda_value_set_from_string")
+  (return-type "gboolean")
   (parameters
-    '("gchar*" "ref")
+    '("const-gchar*" "as_string")
+    '("GdaValueType" "type")
   )
 )
 
-(define-method add_id
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_add_id")
-  (return-type "none")
+(define-method set_from_value
+  (of-object "GdaValue")
+  (c-name "gda_value_set_from_value")
+  (return-type "gboolean")
   (parameters
-    '("gchar*" "id")
+    '("const-GdaValue*" "from")
   )
 )
 
-(define-method add_ref
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_add_ref")
-  (return-type "none")
+(define-method compare
+  (of-object "GdaValue")
+  (c-name "gda_value_compare")
+  (return-type "gint")
   (parameters
-    '("gchar*" "ref")
+    '("GdaValue*" "value2")
   )
 )
 
-(define-method get_ref
-  (of-object "GdaXqlItem")
-  (c-name "gda_xql_item_get_ref")
-  (return-type "GdaXqlItem*")
+(define-method compare_ext
+  (of-object "GdaValue")
+  (c-name "gda_value_compare_ext")
+  (return-type "gint")
   (parameters
-    '("gchar*" "ref")
+    '("GdaValue*" "value2")
   )
 )
 
+(define-method stringify
+  (of-object "GdaValue")
+  (c-name "gda_value_stringify")
+  (return-type "gchar*")
+)
 
+(define-method to_xml
+  (of-object "GdaValue")
+  (c-name "gda_value_to_xml")
+  (return-type "xmlNodePtr")
+)
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-join.h
-
-(define-function gda_xql_join_get_type
-  (c-name "gda_xql_join_get_type")
+(define-function gda_money_get_type
+  (c-name "gda_money_get_type")
   (return-type "GType")
 )
 
-(define-function gda_xql_join_new
-  (c-name "gda_xql_join_new")
-  (is-constructor-of "GdaXqlJoin")
-  (return-type "GdaXqlItem*")
+(define-function gda_money_copy
+  (c-name "gda_money_copy")
+  (return-type "gpointer")
+  (parameters
+    '("gpointer" "boxed")
+  )
 )
 
-(define-function gda_xql_join_new_with_data
-  (c-name "gda_xql_join_new_with_data")
-  (return-type "GdaXqlItem*")
+(define-function gda_money_free
+  (c-name "gda_money_free")
+  (return-type "none")
   (parameters
-    '("GdaXqlItem*" "target")
-    '("GdaXqlItem*" "cond")
-    '("gchar*" "type")
+    '("gpointer" "boxed")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-list.h
-
-(define-function gda_xql_list_get_type
-  (c-name "gda_xql_list_get_type")
+(define-function gda_numeric_get_type
+  (c-name "gda_numeric_get_type")
   (return-type "GType")
 )
 
-(define-function gda_xql_list_new
-  (c-name "gda_xql_list_new")
-  (is-constructor-of "GdaXqlList")
-  (return-type "GdaXqlItem*")
+(define-function gda_numeric_copy
+  (c-name "gda_numeric_copy")
+  (return-type "gpointer")
   (parameters
-    '("gchar*" "tag")
+    '("gpointer" "boxed")
   )
 )
 
-(define-function gda_xql_list_unref_list
-  (c-name "gda_xql_list_unref_list")
+(define-function gda_numeric_free
+  (c-name "gda_numeric_free")
   (return-type "none")
   (parameters
-    '("GSList*" "list")
+    '("gpointer" "boxed")
   )
 )
 
-(define-function gda_xql_list_new_setlist
-  (c-name "gda_xql_list_new_setlist")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_sourcelist
-  (c-name "gda_xql_list_new_sourcelist")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_targetlist
-  (c-name "gda_xql_list_new_targetlist")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_order
-  (c-name "gda_xql_list_new_order")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_dest
-  (c-name "gda_xql_list_new_dest")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_arglist
-  (c-name "gda_xql_list_new_arglist")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_valuelist
-  (c-name "gda_xql_list_new_valuelist")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_joinlist
-  (c-name "gda_xql_list_new_joinlist")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_and
-  (c-name "gda_xql_list_new_and")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_or
-  (c-name "gda_xql_list_new_or")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_list_new_group
-  (c-name "gda_xql_list_new_group")
-  (return-type "GdaXqlItem*")
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-query.h
-
-(define-function gda_xql_query_get_type
-  (c-name "gda_xql_query_get_type")
+(define-function gda_time_get_type
+  (c-name "gda_time_get_type")
   (return-type "GType")
 )
 
-(define-function gda_xql_query_new
-  (c-name "gda_xql_query_new")
-  (is-constructor-of "GdaXqlQuery")
-  (return-type "GdaXqlItem*")
-)
-
-(define-function gda_xql_query_new_with_data
-  (c-name "gda_xql_query_new_with_data")
-  (return-type "GdaXqlItem*")
+(define-function gda_time_copy
+  (c-name "gda_time_copy")
+  (return-type "gpointer")
   (parameters
-    '("GdaXqlItem*" "xqlitem")
+    '("gpointer" "boxed")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-select.h
-
-(define-function gda_xql_select_get_type
-  (c-name "gda_xql_select_get_type")
-  (return-type "GType")
-)
-
-(define-function gda_xql_select_new
-  (c-name "gda_xql_select_new")
-  (is-constructor-of "GdaXqlSelect")
-  (return-type "GdaXqlItem*")
+(define-function gda_time_free
+  (c-name "gda_time_free")
+  (return-type "none")
+  (parameters
+    '("gpointer" "boxed")
+  )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-stack.h
-
-(define-function gda_xql_stack_get_type
-  (c-name "gda_xql_stack_get_type")
+(define-function gda_timestamp_get_type
+  (c-name "gda_timestamp_get_type")
   (return-type "GType")
 )
 
-(define-function gda_xql_stack_new
-  (c-name "gda_xql_stack_new")
-  (is-constructor-of "GdaXqlStack")
-  (return-type "GdaXqlStack*")
+(define-function gda_timestamp_copy
+  (c-name "gda_timestamp_copy")
+  (return-type "gpointer")
+  (parameters
+    '("gpointer" "boxed")
+  )
 )
 
-(define-method push
-  (of-object "GdaXqlStack")
-  (c-name "gda_xql_stack_push")
+(define-function gda_timestamp_free
+  (c-name "gda_timestamp_free")
   (return-type "none")
   (parameters
-    '("GdaXqlItem*" "item")
+    '("gpointer" "boxed")
   )
 )
 
-(define-method pop
-  (of-object "GdaXqlStack")
-  (c-name "gda_xql_stack_pop")
-  (return-type "GdaXqlItem*")
-)
-
-(define-method empty
-  (of-object "GdaXqlStack")
-  (c-name "gda_xql_stack_empty")
-  (return-type "gboolean")
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-target.h
-
-(define-function gda_xql_target_get_type
-  (c-name "gda_xql_target_get_type")
+(define-function gda_date_get_type
+  (c-name "gda_date_get_type")
   (return-type "GType")
 )
 
-(define-function gda_xql_target_new
-  (c-name "gda_xql_target_new")
-  (is-constructor-of "GdaXqlTarget")
-  (return-type "GdaXqlItem*")
+(define-function gda_date_copy
+  (c-name "gda_date_copy")
+  (return-type "gpointer")
+  (parameters
+    '("gpointer" "boxed")
+  )
 )
 
-(define-function gda_xql_target_new_with_data
-  (c-name "gda_xql_target_new_with_data")
-  (return-type "GdaXqlItem*")
+(define-function gda_date_free
+  (c-name "gda_date_free")
+  (return-type "none")
   (parameters
-    '("gchar*" "id")
-    '("gchar*" "name")
-    '("GdaXqlItem*" "join")
+    '("gpointer" "boxed")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-update.h
-
-(define-function gda_xql_update_get_type
-  (c-name "gda_xql_update_get_type")
+(define-function gda_geometricpoint_get_type
+  (c-name "gda_geometricpoint_get_type")
   (return-type "GType")
 )
 
-(define-function gda_xql_update_new
-  (c-name "gda_xql_update_new")
-  (is-constructor-of "GdaXqlUpdate")
-  (return-type "GdaXqlItem*")
-)
-
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-utils.h
-
-(define-function gda_xql_gensym
-  (c-name "gda_xql_gensym")
-  (return-type "gchar*")
-  (parameters
-    '("gchar*" "sym")
-  )
-)
-
-(define-function gda_xql_destroy_hash_pair
-  (c-name "gda_xql_destroy_hash_pair")
-  (return-type "gboolean")
+(define-function gda_geometricpoint_copy
+  (c-name "gda_geometricpoint_copy")
+  (return-type "gpointer")
   (parameters
-    '("gchar*" "key")
-    '("gpointer*" "value")
-    '("GFreeFunc" "func")
+    '("gpointer" "boxed")
   )
 )
 
-(define-function gda_xql_dom_to_xml
-  (c-name "gda_xql_dom_to_xml")
-  (return-type "gchar*")
+(define-function gda_geometricpoint_free
+  (c-name "gda_geometricpoint_free")
+  (return-type "none")
   (parameters
-    '("xmlNode*" "node")
-    '("gboolean" "freedoc")
+    '("gpointer" "boxed")
   )
 )
 
-(define-function gda_xql_dom_to_sql
-  (c-name "gda_xql_dom_to_sql")
-  (return-type "gchar*")
-  (parameters
-    '("xmlNode*" "node")
-    '("gboolean" "freedoc")
-  )
+(define-function gda_binary_get_type
+  (c-name "gda_binary_get_type")
+  (return-type "GType")
 )
 
-(define-function gda_xql_new_node
-  (c-name "gda_xql_new_node")
-  (return-type "xmlNode*")
+(define-function gda_binary_copy
+  (c-name "gda_binary_copy")
+  (return-type "gpointer")
   (parameters
-    '("gchar*" "tag")
-    '("xmlNode*" "parNode")
+    '("gpointer" "boxed")
   )
 )
 
-(define-function gda_xql_new_attr
-  (c-name "gda_xql_new_attr")
+(define-function gda_binary_free
+  (c-name "gda_binary_free")
   (return-type "none")
   (parameters
-    '("gchar*" "key")
-    '("gchar*" "value")
-    '("xmlNode*" "node")
+    '("gpointer" "boxed")
   )
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-value.h
-
-(define-function gda_xql_value_get_type
-  (c-name "gda_xql_value_get_type")
+(define-function gda_value_list_get_type
+  (c-name "gda_value_list_get_type")
   (return-type "GType")
 )
 
-(define-function gda_xql_value_new
-  (c-name "gda_xql_value_new")
-  (is-constructor-of "GdaXqlValue")
-  (return-type "GdaXqlItem*")
+(define-function gda_smallint_get_type
+  (c-name "gda_smallint_get_type")
+  (return-type "GType")
 )
 
-(define-function gda_xql_value_new_with_data
-  (c-name "gda_xql_value_new_with_data")
-  (return-type "GdaXqlItem*")
-  (parameters
-    '("gchar*" "id")
-  )
+(define-function gda_smalluint_get_type
+  (c-name "gda_smalluint_get_type")
+  (return-type "GType")
 )
 
-
-
-;; From /opt/gnome212/include/libgda-1.2/libgda/gda-xql-valueref.h
-
-(define-function gda_xql_valueref_get_type
-  (c-name "gda_xql_valueref_get_type")
+(define-function gda_gdatype_get_type
+  (c-name "gda_gdatype_get_type")
   (return-type "GType")
 )
 
-(define-function gda_xql_valueref_new
-  (c-name "gda_xql_valueref_new")
-  (is-constructor-of "GdaXqlValueref")
-  (return-type "GdaXqlItem*")
-)
+
+
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/global-decl.h
 
 
 
-;; From /opt/gnome212/include/libgda-1.2/libgda/libgda.h
+;; From /home/murrayc/cvs/gnome214/branches/HEAD/libgda/libgda/libgda.h
 
 (define-function gda_init
   (c-name "gda_init")
diff -aurN gnome-python-extras-2.12.0.orig/gda/gda.override gnome-python-extras-2.12.0/gda/gda.override
--- gnome-python-extras-2.12.0.orig/gda/gda.override	2005-04-14 18:37:40.000000000 +0200
+++ gnome-python-extras-2.12.0/gda/gda.override	2005-10-23 17:13:19.000000000 +0200
@@ -3,34 +3,11 @@
 #include <Python.h>
 #include <pygobject.h>
 #include <libgda/gda-server-provider.h>
-#include <libgda/gda-xql-column.h>
-#include <libgda/gda-xql-const.h>
-#include <libgda/gda-xql-delete.h>
-#include <libgda/gda-xql-dml.h>
-#include <libgda/gda-xql-dual.h>
-#include <libgda/gda-xql-field.h>
-#include <libgda/gda-xql-func.h>
-#include <libgda/gda-xql-insert.h>
-#include <libgda/gda-xql-join.h>
-#include <libgda/gda-xql-list.h>
-#include <libgda/gda-xql-query.h>
-#include <libgda/gda-xql-list.h>
-#include <libgda/gda-xql-query.h>
-#include <libgda/gda-xql-select.h>
-#include <libgda/gda-xql-stack.h>
-#include <libgda/gda-xql-stack.h>
-#include <libgda/gda-xql-target.h>
-#include <libgda/gda-xql-update.h>
-#include <libgda/gda-xql-utils.h>
-#include <libgda/gda-xql-value.h>
-#include <libgda/gda-xql-valueref.h>
+#include <libgda/gda-threader.h>
 #include <libgda/libgda.h>
 #include "gdaglue.h"
 #include "pygdavalue_conversions.h"
 
-//TODO: Fix this in libgda itself:
-#define GDA_TYPE_XQL_VALUE_REF GDA_TYPE_XQL_VALUEREF
-
 %%
 modulename gda
 %%
@@ -218,8 +195,13 @@
 		return Py_None;
 	}
 
+	GError *error = 0;
 	GList *tmp, *list = gda_connection_execute_command (GDA_CONNECTION (self->obj),
-	      GDA_COMMAND (cmd->obj), GDA_PARAMETER_LIST (params->obj));
+	      GDA_COMMAND (cmd->obj), GDA_PARAMETER_LIST (params->obj), &error);
+        
+        if(error) {
+   		//TODO: Do something - throw some kind of pythony exception.
+	}
 
 	for (tmp = list; tmp != NULL; tmp = tmp->next) {
 		PyObject* obj = pygobject_new (G_OBJECT (tmp->data));
diff -aurN gnome-python-extras-2.12.0.orig/gda/Makefile.am gnome-python-extras-2.12.0/gda/Makefile.am
--- gnome-python-extras-2.12.0.orig/gda/Makefile.am	2005-04-15 18:59:37.000000000 +0200
+++ gnome-python-extras-2.12.0/gda/Makefile.am	2005-10-23 17:13:19.000000000 +0200
@@ -6,13 +6,13 @@
 EXTRA_DIST = $(defs_DATA)
 
 #Install these utility function headers:
-pkgincludedir = $(includedir)/pygda-1.2
+pkgincludedir = $(includedir)/pygda-2.0
 pkginclude_HEADERS = pygdavalue_conversions.h
 
 #Let other software discover the location of these headers:
 pkgconfigdir = $(libdir)/pkgconfig
 pkgconfig_DATA = \
-	pygda-1.2.pc
+	pygda-2.0.pc
 
 
 
diff -aurN gnome-python-extras-2.12.0.orig/gda/pygda-1.2.pc.in gnome-python-extras-2.12.0/gda/pygda-1.2.pc.in
--- gnome-python-extras-2.12.0.orig/gda/pygda-1.2.pc.in	2005-04-15 16:15:10.000000000 +0200
+++ gnome-python-extras-2.12.0/gda/pygda-1.2.pc.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,17 +0,0 @@
-prefix=@prefix@
-exec_prefix=@exec_prefix@
-includedir=@includedir@
-datadir=@datadir@
-pyexecdir=@pyexecdir@
-
-# you can use the --variable=pygtkincludedir argument to
-# pkg-config to get this value.  You might want to use this to
-# install additional headers.
-pygtkincludedir=${includedir}/pygda-1.2
-
-
-Name: PyGDA
-Description: Python bindings for libgda
-Requires: pygobject-2.0 libgda
-Version: @VERSION@
-Cflags: -I${pygtkincludedir}
diff -aurN gnome-python-extras-2.12.0.orig/gda/pygda-2.0.pc.in gnome-python-extras-2.12.0/gda/pygda-2.0.pc.in
--- gnome-python-extras-2.12.0.orig/gda/pygda-2.0.pc.in	1970-01-01 01:00:00.000000000 +0100
+++ gnome-python-extras-2.12.0/gda/pygda-2.0.pc.in	2005-10-23 17:13:19.000000000 +0200
@@ -0,0 +1,17 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+includedir=@includedir@
+datadir=@datadir@
+pyexecdir=@pyexecdir@
+
+# you can use the --variable=pygtkincludedir argument to
+# pkg-config to get this value.  You might want to use this to
+# install additional headers.
+pygtkincludedir=${includedir}/pygda-2.0
+
+
+Name: PyGDA
+Description: Python bindings for libgda
+Requires: pygobject-2.0 libgda-2.0
+Version: @VERSION@
+Cflags: -I${pygtkincludedir}
diff -aurN gnome-python-extras-2.12.0.orig/gda/pygdavalue_conversions.c gnome-python-extras-2.12.0/gda/pygdavalue_conversions.c
--- gnome-python-extras-2.12.0.orig/gda/pygdavalue_conversions.c	2005-04-17 21:51:06.000000000 +0200
+++ gnome-python-extras-2.12.0/gda/pygdavalue_conversions.c	2005-10-23 17:13:19.000000000 +0200
@@ -1,5 +1,9 @@
+#include <Python.h>
+#if PY_VERSION_HEX >= 0x02040000
+# include <datetime.h> /* From Python */
+#endif
 #include "pygdavalue_conversions.h"
-#include <datetime.h> /* From Python */
+
 
 /**
  * pygda_value_from_pyobject:
@@ -30,6 +34,8 @@
       gda_value_set_double (boxed, PyFloat_AsDouble (input));
     } else if (PyBool_Check (input)) {
       gda_value_set_boolean (boxed, (input == Py_True));
+
+#if PY_VERSION_HEX >= 0x02040000 //These functions were introduced in python 2.4.
     } else if (PyDateTime_Check (input)) {
          GdaTimestamp gda;
          gda.year = PyDateTime_GET_YEAR(input);
@@ -53,6 +59,8 @@
          gda.second = PyDateTime_TIME_GET_SECOND(input);
          gda.timezone = 0;
          gda_value_set_time (boxed, &gda);
+#endif //PY_VERSION_HEX
+
     } else {
       g_warning("Unhandled python type.");
       return -1; //failed.
@@ -79,7 +87,9 @@
 
     value_type = gda_value_get_type ((GdaValue*)boxed);
 
+#if PY_VERSION_HEX >= 0x02040000
     PyDateTime_IMPORT; /* So we can use PyDate*() functions. */
+#endif
 
     if (value_type == GDA_VALUE_TYPE_NULL) {
       Py_INCREF (Py_None);
@@ -89,18 +99,19 @@
     } else if (value_type == GDA_VALUE_TYPE_BIGUINT) {
         ret = PyLong_FromLong (gda_value_get_biguint ((GdaValue*)boxed));
     } else if (value_type == GDA_VALUE_TYPE_BINARY) {
-        glong size = 0;
-        const gchar* val = (const gchar*)gda_value_get_binary ((GdaValue*)boxed, &size);
-        ret = PyString_FromString (val); //TODO: Use the size.
+        const GdaBinary* gdaBinary = gda_value_get_binary ((GdaValue*)boxed);
+        ret = PyString_FromString ((const gchar*)(gdaBinary->data)); //TODO: Use the size.
     } else if (value_type == GDA_VALUE_TYPE_BLOB) {
         /* const GdaBlob* val = gda_value_get_blob ((GdaValue*)boxed); */
         ret = 0; /* TODO: This thing has a whole read/write API. */
     } else if (value_type == GDA_VALUE_TYPE_BOOLEAN) {
         ret = PyBool_FromLong (gda_value_get_boolean ((GdaValue*)boxed));
+#if PY_VERSION_HEX >= 0x02040000
     } else if (value_type == GDA_VALUE_TYPE_DATE) {
         const GdaDate* val = gda_value_get_date ((GdaValue*)boxed);
         if(val)
           ret = PyDate_FromDate(val->year, val->month, val->day);
+#endif
     } else if (value_type == GDA_VALUE_TYPE_DOUBLE) {
         ret = PyFloat_FromDouble (gda_value_get_double ((GdaValue*)boxed));
     } else if (value_type == GDA_VALUE_TYPE_GEOMETRIC_POINT) {
@@ -115,7 +126,7 @@
         const GdaNumeric* val = gda_value_get_numeric ((GdaValue*)boxed);
         const gchar* number_as_text = val->number; /* Formatted according to the C locale, probably. */
         /* This would need a string _object_: ret = PyFloat_FromString(number_as_text, 0); */
-        ret = PyFloat_FromDouble (PyOS_ascii_strtod (number_as_text, 0));
+        ret = PyFloat_FromDouble (g_ascii_strtod (number_as_text, NULL));
     } else if (value_type == GDA_VALUE_TYPE_SINGLE) {
         ret = PyFloat_FromDouble (gda_value_get_single ((GdaValue*)boxed));
     } else if (value_type == GDA_VALUE_TYPE_SMALLINT) {
@@ -124,11 +135,13 @@
         const gchar* val = gda_value_get_string ((GdaValue*)boxed);
         ret = PyString_FromString (val);
     } else if (value_type == GDA_VALUE_TYPE_TIME) {
+#if PY_VERSION_HEX >= 0x02040000
         const GdaTime* val = gda_value_get_time ((GdaValue*)boxed);
         ret = PyTime_FromTime(val->hour, val->minute, val->second, 0); /* TODO: Should we ignore GdaDate::timezone ? */
     } else if (value_type == GDA_VALUE_TYPE_TIMESTAMP) {
         const GdaTimestamp* val = gda_value_get_timestamp ((GdaValue*)boxed);
         ret = PyDateTime_FromDateAndTime(val->year, val->month, val->day, val->hour, val->minute, val->second, 0); /* TODO: Should we ignore GdaTimestamp::timezone ? */
+#endif
     } else if (value_type == GDA_VALUE_TYPE_TINYINT) {
         ret = PyInt_FromLong (gda_value_get_tinyint ((GdaValue*)boxed));
     } else if (value_type == GDA_VALUE_TYPE_TINYUINT) {
